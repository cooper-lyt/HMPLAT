<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:s="http://jboss.org/schema/seam/taglib"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:a="http://richfaces.org/a4j" xmlns:r="http://richfaces.org/rich"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:dh="http://www.dgsoft.com/jsf/html"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                template="template-task-oper.xhtml">


    <ui:param name="selectTabIndex" value="3"/>

    <a:outputPanel layout="block" styleClass="rf-msgs-err"
                   rendered="#{businessDefineHome.haveNeedFile and (taskOwnerBusinessFile.importantStatus eq 'NO_UPLOAD')}">
        <span class="octicon octicon-alert" style="font-weight: bold"/> #{messages.haveNeedFileNotUpload}
    </a:outputPanel>

    <a:outputPanel styleClass="rf-msgs-wrn" rendered="#{not empty ownerTaskHandle.backComments}">
        <span class="octicon octicon-alert"/>
        <strong>#{messages.fallback}! </strong>#{ownerTaskHandle.backComments}
    </a:outputPanel>

    <a:outputPanel styleClass="rf-msgs-wrn" rendered="#{not empty ownerTaskHandle.checkComments}">
        <span class="octicon octicon-alert"/>
        <strong>#{messages.checkFail}! </strong>#{ownerTaskHandle.checkComments}
    </a:outputPanel>



    <a:outputPanel layout="block" styleClass="rf-msgs-wrn"
                   rendered="#{(taskOwnerBusinessFile.importantStatus eq 'NO_FILE')}">
        <span class="octicon octicon-alert" style="font-weight: bold"/> #{messages.haveLaterUploadNeedFile}
    </a:outputPanel>

    <div>

        <ui:include src="/func/house/owner/BusinessMessageList.xhtml">
            <ui:param name="processMessageList" value="#{ownerBusinessHome.instance.processMessageList}"/>
        </ui:include>

    </div>

    <a:repeat value="#{businessInfoCompare.changeInfo}" var="_info">
        <ui:decorate template="/business/houseOwner/HouseInfoCompare.xhtml">
            <ui:param name="changeDatas" value="#{_info.value}"/>
            #{_info.key}:#{messages.HouseInfoCompareCreateWarning}
        </ui:decorate>
    </a:repeat>






    <div class="new-repo-container">
    <div class="new-user-avatar-cta">

        <p>

            <s:link styleClass="minibutton primary #{( businessDefineHome.completePass and businessDefineHome.subscribesPass and ownerTaskHandle.needFilePass) ? '' : 'disabled'}"
                    disabled="#{not businessDefineHome.completePass or not businessDefineHome.subscribesPass or not ownerTaskHandle.needFilePass}"
                    action="#{ownerTaskHandle.complete}">
                <span class="octicon octicon-split"/>
                #{messages.completeTask}
            </s:link>
        </p>

        <p>
        <strong>#{messages.TaskVariableSaved}</strong>
            #{messages.completeDescription}
        </p>
    </div>

        <h:form rendered="#{taskDescription.checkTask}">

            <s:decorate styleClass="form-group " template="/layout/edit-big.xhtml">
                <ui:define name="label">
                    #{messages.taskCheckComments}
                </ui:define>
                <ui:param name="for" value="taskCheckCommentsInput"/>
                <h:inputTextarea label="#{messages.taskCheckComments}" required="true" id="taskCheckCommentsInput" styleClass="form-control"
                                 value="#{ownerTaskHandle.transitionComments}" rows="4">
                    <r:validator event="change"/>
                </h:inputTextarea>
            </s:decorate>

            <hr/>

            <div class="subnav org-toolbar">
                <h:commandLink styleClass="button primary right" action="#{ownerTaskHandle.complete}">
                    #{messages.Agree}
                </h:commandLink>
                <h:commandLink styleClass="button danger right" action="#{ownerTaskHandle.back}">
                    #{messages.Reject}
                </h:commandLink>

            </div>


        </h:form>
</div>

</ui:composition>
