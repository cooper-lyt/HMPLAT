<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:s="http://jboss.org/schema/seam/taglib"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:fn="http://java.sun.com/jsp/jstl/functions"
                xmlns:p="http://xmlns.jcp.org/jsf/passthrough"
                xmlns:a="http://richfaces.org/a4j" xmlns:r="http://richfaces.org/rich"
                xmlns:dh="http://www.dgsoft.com/jsf/html"
                template="/layout/template-tab.xhtml">

<ui:define name="taskChangePush">
    <a:push id="pushTask" address="pushTaskChange">
        <a:ajax event="dataavailable" render="taskFilterForm"/>
    </a:push>
</ui:define>

    <ui:define name="outcss">
        <h:outputStylesheet library="github" name="/css/github1.css"/>
        <h:outputStylesheet library="github" name="/css/github2.css"/>
    </ui:define>

    <ui:define name="function-tile">
        <h1>#{messages.tasks}</h1>
    </ui:define>
    <ui:define name="head-tab">

        <s:link styleClass="pagehead-nav-item" view="/func/system/business/start.xhtml">
            <span class="octicon octicon-plus"></span>
            #{messages.createBusiness}
        </s:link>

        <s:link styleClass="selected pagehead-nav-item">
            <span class="octicon octicon-inbox"/>
            #{messages.operateTask}
        </s:link>

        <s:link styleClass="pagehead-nav-item">
            <span class="octicon octicon-eye"></span>
            #{messages.checkTask}
        </s:link>



    </ui:define>

    <h:outputStylesheet>
        .sortSelect.bootstrap-select.btn-group > .btn{
            width: auto;
            float: right;
        }
    </h:outputStylesheet>


    <div class="explore-pjax-container container explore-page stars-browser">
        <div class="columns">
            <div class="column three-fourths">
                <div class="sort-bar">
                    <div class="select-menu js-menu-container js-select-menu right select-menu-modal-right">



                        <h:form>
                        <h:selectOneMenu p:data-header="#{messages.SortOption}"
                                         p:data-dlabel="#{messages.SortBy}"
                                         p:data-width="200px" styleClass="selectpicker sortSelect"

                                         value="#{taskFilter.sortBy}">
                            <s:selectItems value="#{taskFilter.sortFields}" var="_field" itemValue="#{_field}"
                                           label="#{messages[_field.name()]}"/>
                            <s:convertEnum/>
                            <a:ajax event="valueChange" execute="@this" listener="#{allTaskAdapterCacheList.reset}">
                                <a:attachQueue requestDelay="0"/>
                            </a:ajax>
                        </h:selectOneMenu>
                        </h:form>
                    </div>

                    <h:form id="keySearchForm" >


                        <h:inputText value="#{taskFilter.searchKey}" id="searchKeyInput" onblur="searchByKey()"
                                     styleClass="filter_input" p:autocapitalize="off" p:placeholder="#{messages.searchTask}"
                                     autocomplete="off" >

                        </h:inputText>

                        <input style="display: none"/>

                        <r:hotKey enabledInInput="true" key="return" selector="#keySearchForm"  onkeyup="searchByKey()">

                        </r:hotKey>


                        <a:jsFunction name="searchByKey" action="#{allTaskAdapterCacheList.reset}" execute="@form" status="processWaiting">

                        </a:jsFunction>
                    </h:form>
                </div>
                <h:form>

                    <a:outputPanel ajaxRendered="true">

                        <a:outputPanel layout="block" styleClass="blankslate"
                                       rendered="#{(empty allTaskAdapterCacheList.resultList) and allTaskAdapterCacheList.emptyTask}">
                            <a:outputPanel styleClass="mega-octicon octicon-inbox"></a:outputPanel>



                            <h3>#{messages.emptyTask}#{messages[allTaskAdapterCacheList.filterType.messageKey]}</h3>
                            <p>#{messages.emptyTaskDescription} <a:commandLink immediate="true" execute="@this" render="taskFilterForm"
                                                                               status="processWaiting"
                                                                  value="#{messages.manualRefresh}" action="#{allTaskAdapterCacheList.refresh}">
                                <a:attachQueue requestDelay="0"/>
                            </a:commandLink></p>
                        </a:outputPanel>

                        <a:outputPanel layout="block" styleClass="blankslate"
                                       rendered="#{(empty allTaskAdapterCacheList.resultList) and (not allTaskAdapterCacheList.emptyTask)}">
                            <a:outputPanel styleClass="mega-octicon octicon-search"></a:outputPanel>



                            <h3>#{messages.emptySearchTask}#{messages[allTaskAdapterCacheList.filterType.messageKey]}</h3>
                            <p>#{messages.emptySearchTaskDescription}
                                <a:commandLink immediate="true" execute="@this" status="processWaiting"
                                                                                     value="#{messages.clearCondition}"
                                                                                     render="dataAreaForm,keySearchForm"
                                                                                     action="#{allTaskAdapterCacheList.clearCondition}">
                                <a:attachQueue requestDelay="0"/>
                                </a:commandLink> #{messages.orOther}
                                <a:commandLink immediate="true" execute="@this" render="taskFilterForm" status="processWaiting"
                                                                  value="#{messages.refresh}" action="#{allTaskAdapterCacheList.refresh}">
                                <a:attachQueue requestDelay="0"/>
                            </a:commandLink></p>
                        </a:outputPanel>

                        <a:outputPanel layout="block" styleClass="setup-form" rendered="#{not empty allTaskAdapterCacheList.resultList}">
                            <div class="file-navigation in-mid-page" style="margin-top: 0">
                                <a:commandLink styleClass="btn btn-sm btn-sm-icon btn-primary left compare-button "
                                               immediate="true" execute="@this" status="processWaiting"
                                               action="#{allTaskAdapterCacheList.refresh}" render="taskFilterForm">
                                    <span class="octicon octicon-sync"/>
                                    <a:attachQueue requestDelay="0"/>
                                </a:commandLink>
                                <h:selectOneMenu styleClass="selectpicker mini-select" p:data-width="150px" p:data-header="#{messages.FilterBusinessCategory}"
                                                 value="#{allTaskAdapterCacheList.selectCategoryId}">
                                    <s:selectItems value="#{allTaskAdapterCacheList.filterCategorys}" var="_category"
                                                   label="#{_category.category.name}" itemValue="#{_category.category.id}" noSelectionLabel="#{messages.AllBusinessCategory}"/>
                                    <a:ajax event="valueChange" execute="@this" listener="#{allTaskAdapterCacheList.reset}" render="myBizDefineFilter,taskListDatas">
                                        <a:attachQueue requestDelay="0"/>
                                    </a:ajax>
                                </h:selectOneMenu>

                                <a:outputPanel id="myBizDefineFilter">
                                    <a:outputPanel rendered="#{not empty allTaskAdapterCacheList.selectCategory}">
                                        <span class="i-separator">/</span>
                                        <h:selectOneMenu p:data-header="#{messages.FilterBusinessDefine}" p:data-width="220px"
                                                         styleClass="selectpicker mini-select"  value="#{allTaskAdapterCacheList.selectDefineId}">
                                            <s:selectItems value="#{allTaskAdapterCacheList.selectCategory.defineList}" var="_define"
                                                           label="#{_define.name}" itemValue="#{_define.id}" noSelectionLabel="#{messages.AllBusinessDefine}"/>
                                            <a:ajax event="valueChange" listener="#{allTaskAdapterCacheList.reset}" execute="@this" render="taskListDatas">
                                                <a:attachQueue requestDelay="0"/>
                                            </a:ajax>
                                        </h:selectOneMenu>
                                    </a:outputPanel>
                                </a:outputPanel>

                                <div class="right" >
                                    <a:region>

                                        <dh:switch value="#{taskFilter.desc}" data-on-color="primary" onchange="sortOption()"
                                                   data-off-color="info"
                                                   data-in-link="true"
                                                   onText="&lt;span class='glyphicon glyphicon-sort-by-attributes'/&gt;"
                                                   offText="&lt;span class='glyphicon glyphicon-sort-by-attributes-alt'/&gt;"
                                                   data-label-text="&lt;span class='glyphicon'&gt;&nbsp;&lt;/span&gt;"
                                                   data-size="mini" styleClass="js-switch"/>
                                        <a:jsFunction name="sortOption" status="processWaiting"
                                                      execute="@region" action="#{allTaskAdapterCacheList.reset}">
                                            <a:attachQueue requestDelay="0"/>
                                        </a:jsFunction>
                                    </a:region>
                                </div>
                            </div>



                            <h:outputStylesheet>
                                .boxed-group-inner li:hover{
                                    background-color: #f5f9fc;
                                }


                            </h:outputStylesheet>

                            <a:outputPanel layout="block" styleClass="notifications-list" id="taskListDatas">

                                <div class="boxed-group flush">

                                <div class="right" >

                                </div>



                                    <h3><span style="font-weight: bold;" >#{messages[allTaskAdapterCacheList.filterType.messageKey]}</span>  <span class="counter"> #{allTaskAdapterCacheList.resultList.size} </span> </h3>
                                    <ul class="boxed-group-inner notifications">
                                        <a:repeat value="#{allTaskAdapterCacheList.resultList}" var="_task">
                                            <li class="list-group-item read">

                                                <div class="repo-list-stats">

                                                    <div class="btn-group" role="group" aria-label="...">


                                                        <a:commandLink action="#{pooledTask.unassign}" immediate="true" render="taskFilterForm"
                                                                       execute="@this" rendered="#{_task.myTask and (not _task.myOnly)}"
                                                                       p:aria-label="#{messages.unAcceptTask}" status="processWaiting"
                                                                       styleClass="btn btn-sm btn-warning tooltipped tooltipped-s">


                                                            <f:param name="taskId" value="#{_task.taskInstance.id}"/>
                                                            <a:attachQueue requestDelay="0"/>
                                                            <span class="btn-icon glyphicon glyphicon-export"></span>

                                                        </a:commandLink>



                                                        <a:commandLink rendered="#{not _task.myTask}" immediate="true" execute="@this"
                                                                       action="#{pooledTask.assignToCurrentActor}" render="taskFilterForm"
                                                                       p:aria-label="#{messages.acceptTask}" status="processWaiting"
                                                                       styleClass="btn btn-sm btn-primary tooltipped tooltipped-s">


                                                            <f:param name="taskId" value="#{_task.taskInstance.id}"/>
                                                            <a:attachQueue requestDelay="0"/>

                                                            <span class="btn-icon glyphicon glyphicon-import"></span>
                                                        </a:commandLink>


                                                        <s:link  styleClass="btn btn-sm btn-default" action="#{taskPrepare.operTask}"
                                                                 taskInstance="#{_task.taskInstance}" onclick="#{rich:component('wait')}.show()"
                                                                 style=" #{_task.myOnly ? 'border-bottom-left-radius: 3px; border-top-left-radius: 3px;' : ''}">
                                                            #{_task.myTask ? messages.operTask : messages.acceptAndOperTask}
                                                        </s:link>

                                                        <ui:remove>

                                                            <div class="btn-group btn-group-sm task-action-down-menu">
                                                                <ui:decorate template="/layout/dropdown-actions.xhtml">

                                                                    <ui:define name="caption">

                                                                    </ui:define>
                                                                    <ui:param name="menuTitle" value="#{messages.TaskOper}"/>


                                                                    <a:commandLink action="#{pooledTask.unassign}" immediate="true"
                                                                                   execute="@this" rendered="#{_task.myTask and (not _task.myOnly)}"
                                                                                   styleClass="select-menu-item">


                                                                        <f:param name="taskId" value="#{_task.taskInstance.id}"/>
                                                                        <a:attachQueue requestDelay="0"/>
                                                                        <span class="select-menu-item-icon octicon octicon-check"></span>
                                                                        <span class="select-menu-item-text"> #{messages.unAcceptTask}</span>
                                                                    </a:commandLink>

                                                                    <a:commandLink rendered="#{not _task.myTask}" styleClass="select-menu-item">
                                                                        <span class="select-menu-item-icon octicon octicon-check"></span>
                                                                        <span class="select-menu-item-text">#{messages.acceptAndOperTask}</span>

                                                                    </a:commandLink>
                                                                    <s:link rendered="#{_task.myTask}"
                                                                            styleClass="select-menu-item"
                                                                            action="#{taskPrepare.beginTask}" taskInstance="#{_task.taskInstance}">
                                                                        <span class="select-menu-item-icon octicon octicon-check"></span>
                                                                        <span class="select-menu-item-text">#{messages.operTask}</span>

                                                                    </s:link>

                                                                    <a:commandLink rendered="#{not _task.myTask}" immediate="true" execute="@this"
                                                                                   action="#{pooledTask.assignToCurrentActor}"
                                                                                   styleClass="select-menu-item">


                                                                        <f:param name="taskId" value="#{_task.taskInstance.id}"/>
                                                                        <span class="select-menu-item-icon octicon octicon-check"></span>
                                                                        <span class="select-menu-item-text">#{messages.acceptTask}</span>
                                                                    </a:commandLink>

                                                                </ui:decorate>
                                                            </div>
                                                        </ui:remove>

                                                    </div>
                                                </div>
                                                <h3 class="repo-list-name">
                                  <span class="type-icon octicon #{(_task.myTask) ? ( _task.myOnly ? 'octicon-broadcast' : 'octicon-person') : 'octicon-organization'}"
                                        style="color:#{(_task.myTask) ? '#5cb85c' : '#337ab7'}"/>
                                                    #{_task.businessDefine.businessCategory.name} / #{_task.businessDefine.name} / #{_task.taskInstance.name}
                                                </h3>

                                                <p class="repo-list-description">
                                                    #{_task.taskDescription.description}
                                                </p>

                                                <p class="repo-list-meta">
                                                    <h:outputText value=" #{_task.taskDescription.businessKey}" style="font-weight: bold; color: #666;">

                                                    </h:outputText>


                                                    #{messages.businessCreatedTimeBy}:
                                                    <h:outputText value="#{_task.taskDescription.createTime}">
                                                        <s:convertDateTime pattern="#{messages.displayDateTimePattern}"/>
                                                    </h:outputText>
                                                    #{' '}
                                                    #{messages.taskCreatedTimeBy}:
                                                    <h:outputText value="#{_task.taskInstance.create}">
                                                        <s:convertDateTime pattern="#{messages.displayDateTimePattern}"/>
                                                    </h:outputText>
                                                </p>

                                            </li>
                                        </a:repeat>
                                    </ul>
                                </div>

                            </a:outputPanel>
                        </a:outputPanel>
                    </a:outputPanel>

                </h:form>
            </div>

            <h:form id="taskFilterForm">

            <a:outputPanel class="column one-fourth">
                <ul class="filter-list">
                    <li>



                        <a:commandLink immediate="true" execute="@this" render="taskFilterForm"
                                       action="#{allTaskAdapterCacheList.reset}"
                                       styleClass="filter-item #{ (allTaskAdapterCacheList.filterTypeName eq 'ALL') ? 'selected' : ''}">
                            <span class="count">#{allTaskAdapterCacheList.allSize}</span>
                            #{messages.allTask}

                            <a:param value="ALL" assignTo="#{allTaskAdapterCacheList.filterTypeName}"/>
                            <a:param assignTo="#{allTaskAdapterCacheList.selectCategoryId}" value=""/>
                            <a:attachQueue requestDelay="0"/>
                        </a:commandLink>

                    </li>
                    <li>

                        <a:commandLink immediate="true" execute="@this" render="taskFilterForm"
                                       action="#{allTaskAdapterCacheList.reset}"
                                       styleClass="filter-item #{allTaskAdapterCacheList.filterTypeName eq 'POOLED' ? 'selected' : ''}">
                            <span class="count">#{allTaskAdapterCacheList.pooledSize}</span>
                            #{messages.todoBussiness}

                            <a:param value="POOLED" assignTo="#{allTaskAdapterCacheList.filterTypeName}"/>
                            <a:param assignTo="#{allTaskAdapterCacheList.selectCategoryId}" value=""/>
                            <a:attachQueue requestDelay="0"/>
                        </a:commandLink>
                    </li>
                    <li>


                        <a:commandLink immediate="true" execute="@this" render="taskFilterForm"
                                       action="#{allTaskAdapterCacheList.reset}"
                                       styleClass="filter-item #{allTaskAdapterCacheList.filterTypeName eq 'OWNER' ? 'selected' : ''}">
                            <span class="count">#{allTaskAdapterCacheList.ownerSize}</span>
                            #{messages.myBussiness}
                            <a:param value="OWNER" assignTo="#{allTaskAdapterCacheList.filterTypeName}"/>
                            <a:param assignTo="#{allTaskAdapterCacheList.selectCategoryId}" value=""/>
                            <a:attachQueue requestDelay="0"/>
                        </a:commandLink>
                    </li>
                </ul>
                <hr/>

            </a:outputPanel>

             <h:outputStylesheet>
                 .dateAreaInput{
                     margin-bottom: 5px;
                     padding: 0 9px;
                 }
             </h:outputStylesheet>
            </h:form>
               <h:form id="dataAreaForm">
                   <a:jsFunction name="clearDateFrom" execute="@this" immediate="true" render="dataAreaForm" action="#{taskFilter.clearDateFrom}">
                       <a:attachQueue requestDelay="0"/>
                   </a:jsFunction>
                   <a:jsFunction name="clearDateTo" execute="@this" immediate="true" render="dataAreaForm" action="#{taskFilter.clearDateTo}">
                       <a:attachQueue requestDelay="0"/>
                   </a:jsFunction>

                    <div class="form-group">
                    <div class="input-group date form_datetime dateAreaInput">

                        <h:inputText value="#{taskFilter.searchDateArea.dateFrom}"
                                     p:placeholder="#{messages.dateAreaBegin}"
                                     onblur="filterDateAreaChange()"
                                     styleClass="form-control js-filterDateAreaInput">
                            <s:convertDateTime pattern="#{messages.datePattern}"/>

                        </h:inputText>

                        <span class="input-group-addon" onclick="clearDateFrom()">

                            <span class="glyphicon glyphicon-remove"></span></span>




                    </div>

                    <div class="input-group date form_datetime dateAreaInput">
                    <h:inputText value="#{taskFilter.searchDateArea.dateTo}"
                                 p:placeholder="#{messages.dateAreaTo}"
                                 onblur="filterDateAreaChange()"
                                 styleClass="form-control js-filterDateAreaInput">
                        <s:convertDateTime pattern="#{messages.datePattern}"/>

                    </h:inputText>
                        <span class="input-group-addon" onclick="clearDateTo()"><span class="glyphicon glyphicon-remove"></span></span>



                    </div>

                        <h:outputScript>

                            $(document).ready(function () {

                            $('.js-filterDateAreaInput')
                            .datetimepicker({
                                        language: "zh-CN",
                                        format: 'yyyy-mm-dd',
                                        weekStart: 1,
                                        todayBtn:  1,
                                        autoclose: 1,
                                        todayHighlight: 1,
                                        startView: 2,
                                        minView: 2,
                                        forceParse: 0
                                    })
                            .on('changeDate', function(ev){

                                        filterDateAreaChange();
                            });


                            });
                        </h:outputScript>


                        <div class="right dateAreaInput" >
                            <dh:switch value="#{taskFilter.createDate}"
                                       data-on-color="primary"
                                       data-off-color="info"
                                       onText="#{messages.BizCreateTimeShort}"
                                       offText="#{messages.TaskCreateTimeShort}"
                                       style="float: rigth"
                                       onchange="filterDateAreaChange()"
                                       styleClass="js-switch switch-small">

                            </dh:switch>
                        </div>

                        <a:jsFunction name="filterDateAreaChange"
                                      action="#{allTaskAdapterCacheList.reset}"
                                      execute="@form" >
                            <a:attachQueue requestDelay="0"/>
                        </a:jsFunction>
                    </div>




               </h:form>



        </div>
    </div>

</ui:composition>