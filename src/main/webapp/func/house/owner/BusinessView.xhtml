<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:s="http://jboss.org/schema/seam/taglib"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:a="http://richfaces.org/a4j"
                xmlns:r="http://richfaces.org/rich"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:dh="http://www.dgsoft.com/jsf/html"
                xmlns:p="http://xmlns.jcp.org/jsf/passthrough"
                template="/layout/template-data.xhtml">


    <ui:param name="funcName" value="#{messages.BusinessView}"/>

    <ui:define name="funcNav">
        <ui:include src="/layout/function-nav.xhtml">
            <ui:param name="functions" value="#{authInfo.workFunctions}"/>
        </ui:include>
    </ui:define>

    <ui:define name="head-right">
        <h:form styleClass="search_repos">
            <div class="flex-table search-form-fluid">
                <div class="flex-table-item flex-table-item-primary">
                    <div class="input-group input-block">
                        <h:inputText styleClass="form-control" value="#{ownerBusinessView.id}"
                                     p:placeholder="#{messages.BUSINESS_CODE}"/>


                        <!-- /btn-group -->
                    </div>
                    <!-- /input-group -->
                </div>
                <div class="flex-table-item">
                    <h:commandLink styleClass="button" action="#{ownerBusinessHome.refresh}">
                        #{messages.Search}
                    </h:commandLink>
                </div>
            </div>
        </h:form>
    </ui:define>

    <h:outputStylesheet name="biz.css"/>

    <a:outputPanel rendered="#{s:hasRole('system.runBusinessMgr')}">



    <ui:decorate template="/layout/edit-modalpanel.xhtml">
        <ui:param name="panelId" value="stopConfirmPanel"/>
        <ui:param name="panelTitle" value="#{messages.StopConfirmTitle}"/>
        <ui:define name="panelBody">

            <s:decorate styleClass="form-group" template="/layout/edit-big.xhtml" >
                <ui:define name="label">
                    <p>#{messages.StopConfirm_confirm_description}</p>
                </ui:define>
                <ui:param name="for" value="stopCommentsInput"/>
                <h:inputTextarea id="stopCommentsInput" styleClass="form-control" rows="4" value="#{ownerBusinessView.comments}"
                                 p:placeholder="#{messages.businessComments}">

                </h:inputTextarea>

            </s:decorate>
        </ui:define>
        <ui:define name="actionButtons">

            <a:commandButton styleClass="button button-block danger" action="#{ownerBusinessView.terminationBiz}"
                             value="#{messages.confirmStop}" render="context"
                             oncomplete="$('#stopConfirmPanel').modal('hide')"
                             execute="@form">
                <a:param value="#{ownerBusinessView.id}" assignTo="#{ownerBusinessView.id}"/>
                <a:attachQueue requestDelay="0"/>
            </a:commandButton>


        </ui:define>

    </ui:decorate>

    <ui:decorate template="/layout/edit-modalpanel.xhtml">
        <ui:param name="panelId" value="suspendConfirmPanel"/>
        <ui:param name="panelTitle" value="#{messages.SuspendConfirmTitle}"/>
        <ui:define name="panelBody">

            <s:decorate styleClass="form-group" template="/layout/edit-big.xhtml" >
                <ui:define name="label">
                    <p>#{messages.suspend_confirm_description}</p>
                </ui:define>
                <ui:param name="for" value="suspendCommentsInput"/>
                <h:inputTextarea id="suspendCommentsInput" styleClass="form-control" rows="4" value="#{ownerBusinessView.comments}"
                                 p:placeholder="#{messages.businessComments}">

                </h:inputTextarea>

            </s:decorate>
        </ui:define>
        <ui:define name="actionButtons">

            <a:commandButton styleClass="button button-block danger" action="#{ownerBusinessView.suspendBiz}"
                             value="#{messages.confirmSuspend}" render="context"
                             oncomplete="$('#suspendConfirmPanel').modal('hide')"
                             execute="@form">
                <a:param value="#{ownerBusinessView.id}" assignTo="#{ownerBusinessView.id}"/>
                <a:attachQueue requestDelay="0"/>
            </a:commandButton>


        </ui:define>

    </ui:decorate>

    <ui:decorate template="/layout/edit-modalpanel.xhtml">
        <ui:param name="panelId" value="resumeConfirmPanel"/>
        <ui:param name="panelTitle" value="#{messages.ResumeConfirmeTitle}"/>
        <ui:define name="panelBody">


            <s:decorate styleClass="form-group" template="/layout/edit-big.xhtml" >
                <ui:define name="label">
                    <p>#{messages.resume_confirme_description}</p>
                </ui:define>
                <ui:param name="for" value="resumeCommentsInput"/>
                <h:inputTextarea id="resumeCommentsInput" styleClass="form-control" rows="4"
                                 p:placeholder="#{messages.businessComments}" value="#{ownerBusinessView.comments}">

                </h:inputTextarea>

            </s:decorate>
        </ui:define>
        <ui:define name="actionButtons">

            <a:commandButton styleClass="btn button-block btn-success btn-reversal" action="#{ownerBusinessView.resumeBiz}"
                             value="#{messages.confirmResume}" render="context"
                             oncomplete="$('#resumeConfirmPanel').modal('hide')"
                             execute="@form">
                <a:param value="#{ownerBusinessView.id}" assignTo="#{ownerBusinessView.id}"/>
                <a:attachQueue requestDelay="0"/>
            </a:commandButton>


        </ui:define>

    </ui:decorate>
    </a:outputPanel>

    <h:form>

    <a:outputPanel layout="block" id="context" styleClass="container">

        <a:outputPanel layout="block" styleClass="blankslate" rendered="#{not ownerBusinessHome.idDefined}">

            <span class="mega-octicon octicon-search"></span>

            <h3>#{messages.EmptyResult}</h3>

            <p>  #{messages.business_not_found_message}

            </p>


        </a:outputPanel>

        <h:outputStylesheet>

            .dashboard-notice.BIZ_CREATE .octicon-repo {
                color: #4183c4;
            }

            .dashboard-notice.BIZ_AFTER_SAVE .octicon-repo {
                color: #f0ad4e;
            }

            .dashboard-notice.BIZ_IMPORT .octicon-repo {
                color: #d9534f;
            }

            .dashboard-notice.recorded h2 {
                color: #4078c0;
            }

        </h:outputStylesheet>


        <a:outputPanel rendered="#{ownerBusinessHome.idDefined}">



            <div class="dashboard-notice #{ownerBusinessHome.instance.source} #{ownerBusinessHome.instance.recorded ? 'recorded' : ''}">


                <a:outputPanel layout="block" styleClass="right" rendered="#{(not empty processInstanceHome.instance) and s:hasRole('system.runBusinessMgr')}">

                    <div class="btn-group" role="group" >

                        <a:commandLink type="button" class="btn btn-success btn-reversal #{(ownerBusinessHome.instance.status eq 'SUSPEND') ? '' : 'disabled'} tooltipped tooltipped-s"
                                       disabled="#{not (ownerBusinessHome.instance.status eq 'SUSPEND')}"
                                       oncomplete="$('#resumeConfirmPanel').modal('show')"
                                       p:aria-label="#{messages.CONTINUE}" immediate="true" execute="@this">
                            <span class="octicon octicon-playback-play"></span>
                            <a:attachQueue requestDelay="0"/>
                            <a:param value="#{ownerBusinessView.id}" assignTo="#{ownerBusinessView.id}"/>
                        </a:commandLink>
                    <a:commandLink type="button" class="btn btn-warning btn-reversal #{ (ownerBusinessHome.instance.status eq 'RUNNING') ? '' : 'disabled'} tooltipped tooltipped-s"
                                   disabled="#{not (ownerBusinessHome.instance.status eq 'RUNNING')}" oncomplete="$('#suspendConfirmPanel').modal('show')"
                                   p:aria-label="#{messages.SUSPEND}" immediate="true" execute="@this">
                        <span class="octicon octicon-playback-pause"></span>
                        <a:attachQueue requestDelay="0"/>
                        <a:param value="#{ownerBusinessView.id}" assignTo="#{ownerBusinessView.id}"/>
                    </a:commandLink>
                    <a:commandLink type="button" class="btn btn-danger btn-reversal #{(not ownerBusinessHome.instance.recorded and ((ownerBusinessHome.instance.status eq 'RUNNING') or (ownerBusinessHome.instance.status eq 'SUSPEND') ) )? '' : 'disabled'} tooltipped tooltipped-s"
                                   disabled="#{not ( not ownerBusinessHome.instance.recorded and  ((ownerBusinessHome.instance.status eq 'RUNNING') or (ownerBusinessHome.instance.status eq 'SUSPEND')))}"
                                   oncomplete="$('#stopConfirmPanel').modal('show')" p:aria-label="#{messages.TERMINATION}"
                                   immediate="true" execute="@this">
                        <span class="octicon octicon-primitive-square"></span>
                        <a:attachQueue requestDelay="0"/>
                        <a:param value="#{ownerBusinessView.id}" assignTo="#{ownerBusinessView.id}"/>
                    </a:commandLink>
                        <a:commandLink type="button" class="btn btn-default btn-reversal #{ (ownerBusinessHome.instance.status eq 'RUNNING')? '' : 'disabled'} tooltipped tooltipped-s"
                                disabled="#{not (ownerBusinessHome.instance.status eq 'RUNNING')}"
                                p:aria-label="#{messages.ASSIGN}"
                                immediate="true" execute="@this">
                        <span class="octicon octicon-person"></span>
                            <a:attachQueue requestDelay="0"/>
                            <a:param value="#{ownerBusinessView.id}" assignTo="#{ownerBusinessView.id}"/>
                        </a:commandLink>
                    </div>

                </a:outputPanel>

                <span class="mega-octicon octicon-repo"></span>

                <h2><strong>#{ownerBusinessHome.instance.defineName}</strong>
                    <h:outputText value="#{messages[ownerBusinessHome.instance.type]}"
                                  rendered="#{not (ownerBusinessHome.instance.type eq 'NORMAL_BIZ')}"/>
                    #{ownerBusinessHome.instance.id}
                    <span class="label label-biz-status #{ownerBusinessHome.instance.status} tooltipped tooltipped-s" aria-label="#{messages[ownerBusinessHome.instance.source]} #{ownerBusinessHome.instance.recorded ? messages.OwnerBusinessRecord : messages.OwnerBusinessNoRecord} #{messages[ownerBusinessHome.instance.status.name()]}"> #{messages[ownerBusinessHome.instance.status.name()]}</span>
                </h2>

                <p class="repo-list-description">
                    #{ownerBusinessHome.instance.memo}
                </p>


                <p class="repo-list-meta">


                    <h:outputText value="#{messages['ownerBusiness.applyTime']}"
                                  rendered="#{not empty ownerBusinessHome.instance.applyTime}"/>
                    <h:outputText value="#{ownerBusinessHome.instance.applyTime}"
                                  rendered="#{not empty ownerBusinessHome.instance.applyTime}">
                        <s:convertDateTime pattern="#{messages.displayDateTimePattern}"/>
                    </h:outputText>

                    <h:outputText value="#{messages['ownerBusiness.checkTime']}"
                                  rendered="#{not empty ownerBusinessHome.instance.checkTime}"/>
                    <h:outputText value=" #{ownerBusinessHome.instance.checkTime}"
                                  rendered="#{not empty ownerBusinessHome.instance.checkTime}">
                        <s:convertDateTime pattern="#{messages.displayDateTimePattern}"/>
                    </h:outputText>

                    <h:outputText value="#{messages['ownerBusiness.regTime']}"
                                  rendered="#{ownerBusinessHome.instance.recorded}"/>
                    <h:outputText value="#{ownerBusinessHome.instance.regTime}"
                                  rendered="#{ownerBusinessHome.instance.recorded}">
                        <s:convertDateTime pattern="#{messages.displayDateTimePattern}"/>
                    </h:outputText>

                    <h:outputText value="#{messages['ownerBusiness.recordTime']}"
                                  rendered="#{not empty ownerBusinessHome.instance.recordTime}"/>
                    <h:outputText value="#{ownerBusinessHome.instance.recordTime}"
                                  rendered="#{not empty ownerBusinessHome.instance.recordTime}">
                        <s:convertDateTime pattern="#{messages.displayDateTimePattern}"/>
                    </h:outputText>


                </p>


            </div>

            <!-- TODO PROCESS MESSAGES -->
            <r:tabPanel switchType="client">
                <c:forEach items="#{businessDefineHome.viewSubscribeDefineGroups}" var="_group">

                    <r:tab>

                        <f:facet name="header">
                            <span class="#{_group.group.iconCss}"/>
                            #{_group.group.name}
                        </f:facet>

                        <dh:entryGrid styleClass="detailsTable table table-bordered "
                                      groupWidth="#{_group.group.groupWidth}" keyWidth="#{_group.group.keyWidth}"
                                      valueWidth="#{_group.group.valueWidth}">
                            <c:forEach items="#{_group.defineList}" var="_item">

                                <f:subview>
                                    <ui:include src="#{_item.page}"/>
                                </f:subview>
                            </c:forEach>
                        </dh:entryGrid>
                    </r:tab>
                </c:forEach>

                <r:tab>
                    <f:facet name="header">
                        <span class="octicon octicon-file-submodule"/>
                        #{messages.businessFile}
                    </f:facet>



                </r:tab>
                <r:tab>
                    <f:facet name="header">
                        <span class="octicon octicon-milestone"/>
                        #{messages.bussinessFlowRecord}
                    </f:facet>

                    <h:outputStylesheet>



                        .status-list-group  .notifications .list-group-item{
                            padding-left: 45px;
                            padding-right: 20px;
                            padding-top: 9px;
                            padding-bottom: 9px;
                        }

                        .status-list-group .notification-actions{
                            right: 20px;
                            top: 10px;
                        }

                        .status-list-group .notification-actions .time{
                            font-size: 12px;
                            color: #767676;
                        }

                        .status-list-group .list-item-title{
                            font-weight: bold; font-size: 14px
                        }

                        .status-list-group .list-item-description{
                            padding-left: 10px; color: #767676;line-height: 13px; margin-top:4px; font-size: 13px;
                        }

                        .status-list-group .status-icon{
                            color: #767676;;
                        }



                    </h:outputStylesheet>


                    <ul class="boxed-group-inner list-group notifications status-list-group">

                        <a:repeat value="#{ownerBusinessHome.taskOperList}" var="_task">
                            <li class="list-group-item issue-notification task-type #{_task.taskType} #{_task.accept ? 'accept' : 'back'}">
                                <span class="list-group-item-name css-truncate" style="max-width: 700px">
                                    <span class="type-icon octicon #{_task.operType} task-oper" aria-label="#{messages[_task.operType]}">

                                    </span>

                                     <h:outputText value="#{_task.taskName}" styleClass="css-truncate-target list-item-title" />

                                    <h:outputText value="#{_task.comments}" styleClass="css-truncate-target list-item-description" style="max-width: 600px"/>



                                </span>

                                <ul class="notification-actions">
                                    <li class="time">       <h:outputText value="#{_task.operTime}">
                                        <s:convertDateTime pattern="#{messages.displayDateTimePattern}"/>
                                    </h:outputText></li>
                                    <li>                    <h:outputText value="#{_task.empName}"
                                                                          styleClass="tooltipped tooltipped-w"
                                                                          p:aria-label="#{_task.empCode}"/></li>
                                </ul>
                            </li>
                        </a:repeat>
                    </ul>


                </r:tab>




                <r:tab rendered="#{not empty processInstanceHome.instance}">
                    <f:facet name="header">
                        <span class="octicon octicon-clock"/>
                        #{messages.processTaskLog}
                    </f:facet>


                    <ul class="boxed-group-inner list-group notifications status-list-group">
                        <a:repeat value="#{processInstanceHome.taskInstanceList}" var="_task">
                            <li class="list-group-item issue-notification #{(_task.open and _task.signalling) ? 'list-group-item-info' : ''}">
                                <span class="list-group-item-name css-truncate"  style="max-width: 700px">
                                    <span class="type-icon octicon octicon-git-commit">

                                    </span>

                                     <h:outputText value="#{_task.name}" styleClass="css-truncate-target list-item-title"/>

                             <h:outputText value="#{_task.create}" styleClass="css-truncate-target list-item-description" style="max-width: 200px">
                                 <s:convertDateTime pattern="#{messages.displayDateTimePattern}"/>
                             </h:outputText>

        <h:outputText value="#{_task.end}" styleClass="css-truncate-target list-item-description" style="max-width: 200px">
            <s:convertDateTime pattern="#{messages.displayDateTimePattern}"/>
        </h:outputText>

                                </span>

                                <ul class="notification-actions">

                                    <li>
                                        <a:commandLink rendered="#{(not empty processInstanceHome.instance) and s:hasRole('system.runBusinessMgr') and (_task.open) and _task.signalling}">
                                                <span class="octicon octicon-person"></span>
                                                <a:attachQueue requestDelay="0"/>
                                        </a:commandLink>
                                    </li>
                                    <li>
                                        <h:outputText value="#{dictionary.getEmpNameById(_task.actorId)}"
                                                      styleClass="tooltipped tooltipped-w"
                                                      p:aria-label="#{_task.actorId}"
                                                      rendered="#{not empty _task.actorId}"/>
                                    </li>

                                    <li>
                                        <a:outputPanel styleClass="tooltipped tooltipped-w" p:aria-label="#{messages.jbpm_task_open}"  rendered="#{_task.open}" >
                                            <a:outputPanel styleClass="octicon octicon-alignment-align status-icon"/>
                                        </a:outputPanel>
                                    </li>

                                    <li>
                                        <a:outputPanel styleClass="tooltipped tooltipped-w" rendered="#{_task.signalling}" p:aria-label="#{messages.jbpm_task_signalling}">
                                            <a:outputPanel styleClass="octicon octicon-git-pull-request status-icon"/>
                                        </a:outputPanel>
                                    </li>

                                    <li>
                                        <a:outputPanel styleClass="tooltipped tooltipped-w" rendered="#{_task.last}" p:aria-label="#{messages.jbpm_task_last}">
                                            <span class="octicon octicon-alignment-aligned-to status-icon"/>

                                        </a:outputPanel>
                                    </li>

                                    <li>
                                        <a:outputPanel styleClass="tooltipped tooltipped-w" rendered="#{_task.suspended}" p:aria-label="#{messages.jbpm_task_suspended}">
                                            <span class="octicon octicon-playback-pause status-icon">

                                            </span>
                                        </a:outputPanel>
                                    </li>

                                    <li>
                                        <a:outputPanel styleClass="tooltipped tooltipped-w " rendered="#{_task.blocking}" p:aria-label="#{messages.jbpm_task_blocking}">
                                            <span class="octicon octicon-alignment-unalign status-icon"/>
                                        </a:outputPanel>
                                    </li>


                                    <li>
                                        <a:outputPanel styleClass="tooltipped tooltipped-w " rendered="#{_task.cancelled}" p:aria-label="#{messages.jbpm_task_cancelled}">
                                            <span class="octicon octicon-x status-icon"/>
                                        </a:outputPanel>
                                    </li>


                                </ul>
                            </li>
                        </a:repeat>

                    </ul>
   </r:tab>


            </r:tabPanel>

        </a:outputPanel>

    </a:outputPanel>
    </h:form>
</ui:composition>