<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:a="http://richfaces.org/a4j" xmlns:r="http://richfaces.org/rich"
      xmlns:s="http://jboss.org/schema/seam/taglib">
<f:view
        contentType="text/html">

<h:head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <!-- meta http-equiv="X-UA-Compatible" content="IE=8"/-->
    <title>#{messages.mainTitle}</title>
    <link rel="shortcut icon" href="#{request.contextPath}/favicon.ico"/>

    <h:outputStylesheet name="application.css"/>
    <h:outputStylesheet name="theme.css"/>
    <ui:insert name="head"/>
</h:head>
<h:body onload="#{r:component('idleHousePopup')}.show();">

<a:queue requestDelay="0" ignoreDupResponses="true"/>
<h:form>
    <r:toolbar id="toolbar" itemSeparator="line" height="30">

        <r:toolbarGroup rendered="#{buildHome.buildGridPages.size gt 1}">
            <a:outputPanel>
    <span class="rf-ds">
            <a:commandLink immediate="true" execute="@this"
                           action="#{buildGridMapHome.firstPage}"
                           render="grid_map,toolbar"
                           styleClass="rf-ds-btn rf-ds-btn-first #{(buildGridMapHome.instance.order ge 2) ? '' : 'rf-ds-dis'}"
                           disabled="#{not (buildGridMapHome.instance.order ge 2)}"
                           value="#{messages.left}#{messages.left}">
                <a:attachQueue requestDelay="0"/>
            </a:commandLink>

            <a:commandLink immediate="true" execute="@this"
                           render="grid_map,toolbar"
                           action="#{buildGridMapHome.previousPage}"
                           disabled="#{not (buildGridMapHome.instance.order ge 2)}"
                           styleClass="rf-ds-btn rf-ds-btn-prev #{(buildGridMapHome.instance.order ge 2) ? '' : 'rf-ds-dis'}"
                           value="#{messages.left}">
                <a:attachQueue requestDelay="0"/>
            </a:commandLink>


        <a:repeat value="#{buildHome.buildGridPages}" var="_page">

            <a:commandLink immediate="true" execute="@this"
                           render="grid_map,toolbar" action="#{buildGridMapHome.toPage}"
                           disabled="#{_page.order eq buildGridMapHome.instance.order}"
                           styleClass="rf-ds-nmb-btn #{(_page.order eq buildGridMapHome.instance.order) ? 'rf-ds-act' : ''}"
                           value="#{_page.order}">
                <a:attachQueue requestDelay="0"/>
                <a:param value="#{_page.order}" assignTo="#{buildGridMapHome.gotoPage}"/>
            </a:commandLink>

        </a:repeat>





            <a:commandLink immediate="true" execute="@this"
                           render="grid_map,toolbar"
                           styleClass="rf-ds-btn rf-ds-btn-next #{(buildGridMapHome.instance.order lt buildHome.instance.buildGridMaps.size) ? '' : 'rf-ds-dis'}"
                           action="#{buildGridMapHome.nextPage}"
                           disabled="#{not (buildGridMapHome.instance.order lt buildHome.instance.buildGridMaps.size)}"
                           value="#{messages.right}">
                <a:attachQueue requestDelay="0"/>
            </a:commandLink>

            <a:commandLink immediate="true" execute="@this"
                           render="grid_map,toolbar"
                           styleClass="rf-ds-btn rf-ds-btn-last #{(buildGridMapHome.instance.order lt buildHome.instance.buildGridMaps.size) ? '' : 'rf-ds-dis'}"
                           disabled="#{not (buildGridMapHome.instance.order lt buildHome.instance.buildGridMaps.size)}"
                           action="#{buildGridMapHome.lastPage}"
                           value="#{messages.right}#{messages.right}">
                <a:attachQueue requestDelay="0"/>
            </a:commandLink>

    </span>
            </a:outputPanel>
        </r:toolbarGroup>

        <r:toolbarGroup>
            <h:graphicImage value="/img/icons/create.gif"/>
            <a:commandLink value="#{(empty buildHome.buildGridPages) ? messages.UploadGridXML : messages.AddGridXML}"
                           immediate="true" execute="@this"
                           oncomplete="#{r:component('updateFilePopup')}.show(); return false;">
                <a:attachQueue requestDelay="0"/>
                <a:param value="#{false}" assignTo="#{buildGridMapHome.replaceGridMap}"/>
            </a:commandLink>
        </r:toolbarGroup>

        <r:toolbarGroup rendered="#{not empty buildHome.buildGridPages}">
            <h:graphicImage value="/img/icons/out_edit.png"/>
            <a:commandLink value="#{messages.UpdateGridXML}" immediate="true" execute="@this"
                           oncomplete="#{r:component('updateFilePopup')}.show(); return false;">
                <a:attachQueue requestDelay="0"/>
                <a:param value="#{true}" assignTo="#{buildGridMapHome.replaceGridMap}"/>
            </a:commandLink>
        </r:toolbarGroup>

        <r:toolbarGroup rendered="#{not empty buildHome.buildGridPages}">
            <h:graphicImage value="/img/icons/delete.png"/>
            <a:commandLink value="#{messages.DeletePage}"
                           onclick="#{r:component('updateFilePopup')}.show(); return false;"/>
        </r:toolbarGroup>

        <r:toolbarGroup rendered="#{not empty buildHome.buildGridPages}">
            <h:graphicImage value="/img/icons/import_table.png"/>
            <a:commandLink value="#{messages.GridFillNew}"/>
        </r:toolbarGroup>

        <r:toolbarGroup rendered="#{(not empty buildHome.buildGridPages) and (not empty buildGridMapHome.idleHouses)}">
            <h:graphicImage value="/img/icons/import_table.png"/>
            <a:commandLink value="#{messages.GridFillIdle}"/>
        </r:toolbarGroup>

        <r:toolbarGroup rendered="#{not empty buildHome.buildGridPages}">
            <h:graphicImage value="/img/icons/save_all.gif"/>

            <a:commandLink value="#{messages.save}" action="#{buildHome.update}" render="grid_map,idle">
                <a:attachQueue requestDelay="0"/>
            </a:commandLink>
        </r:toolbarGroup>

        <r:toolbarGroup location="right">
            <a:status>
                <f:facet name="start">
                    <h:graphicImage value="/img/connect.gif"/>
                </f:facet>
                <f:facet name="stop">
                    <h:graphicImage value="/img/connect_idle.gif"/>
                </f:facet>
            </a:status>
            <h:outputText value="#{buildHome.instance.name}"/>
        </r:toolbarGroup>
    </r:toolbar>
</h:form>

<r:popupPanel id="updateFilePopup" modal="true" autosized="true" resizeable="false">
    <f:facet name="header">
        <h:outputText value="#{messages.UploadBuildGridXml}"/>
    </f:facet>
    <f:facet name="controls">
        <a:commandButton immediate="true" execute="@this" image="/img/close.png"
                         onclick="#{r:component('updateFilePopup')}.hide();return false;"/>
    </f:facet>


    <h:form enctype="multipart/form-data">


        <r:fileUpload maxFilesQuantity="5" title="#{messages.deployJpdlPar}"
                      serverErrorLabel="#{messages.fileUpload_serverErrorLabel}"
                      deleteLabel="#{messages.fileUpload_deleteLabel}"
                      doneLabel="#{messages.fileUpload_doneLabel}"
                      cancelEntryControlLabel="#{messages.fileUpload_cancelEntryControlLabel}"
                      addLabel="#{messages.fileUpload_addControlLabel}"
                      progressLabel="#{messages.fileUpload_progressLabel}"
                      sizeExceededLabel="#{messages.fileUpload_sizeErrorLabel}"
                      uploadLabel="#{messages.fileUpload_uploadControlLabel}"
                      transferErrorLabel="#{messages.fileUpload_transferErrorLabel}"
                      clearAllLabel="#{messages.fileUpload_clearAllControlLabel}"
                      clearLabel="#{messages.fileUpload_clearControlLabel}"
                      stopControlLabel="#{messages.fileUpload_stopControlLabel}"
                      fileUploadListener="#{buildGridMapHome.templeteFileUploadListener}"
                      ontyperejected="alert('#{messages.unsupportedProcessDefFile}');"
                      acceptedTypes="xml">

            <a:ajax event="uploadcomplete"
                    oncomplete="#{r:component('updateFilePopup')}.hide();"
                    execute="@none"
                    render="grid_map,idle,toolbar"/>
        </r:fileUpload>
    </h:form>
</r:popupPanel>


<h:outputStylesheet>
    #buildGridMap td, #buildGridMap th {
        font-size: 1em;
        border: 1px solid #{richSkin.panelBorderColor};
padding:

0
px

0
px

0
px

0
px

;

}

.panelc {
    width: 25%;
}

.footerClass {
    text-align: center;
    padding-top: 5px;
}

.rf-ind-drag {
    font-size: 11px;
    cursor: pointer;

    width: 100%;
    height: 100%;
    border: 0px solid gray;
    padding: 0px
}

.rf-idle-drag {
    font-size: 11px;
    cursor: pointer;
    width: 52px;
    height: 25px;
    border: 1px solid #{richSkin.panelBorderColor};
padding:

0
px

}

.indicator-drag {
    border: 1px solid #000000;
    background-color: gray;
    opacity: 0.3;
    margin: 2px;
    height: 60px;
    width: 60px;
    text-align: center;
}

.indicator-acpt {
    height: 40px;
    width: 40px;
    border: 1px dotted red;
    background-color: green;
}

.indicator-rejt {
    height: 40px;
    width: 40px;
    border: 1px dotted green;
    background-color: red;
}

.rf-p-b {
    width: 100%;
    height: 100%;
    padding: 0px;
}

.new-house-panel {
    width: 60px;
    height: 60px;
    background: url('#{facesContext.externalContext.requestContextPath}/
img

/
house

/
house.png

') center center no-repeat;
}

.idle-house-panel {
    min-height: 60px;
}

</h:outputStylesheet>

<h:form>
    <a:jsFunction name="gridDbClick" data="">

    </a:jsFunction>
</h:form>

<r:popupPanel>

</r:popupPanel>


<a:status id="processWaiting" name="processWaiting"
          onstart="#{r:component('wait')}.show()"
          onstop="#{r:component('wait')}.hide()"/>
<r:popupPanel id="wait" modal="true" autosized="true"
              moveable="false" resizeable="false">
    <h:panelGrid columns="3">
        <h:graphicImage value="/img/smalBlueWait.gif"/>
        &#160;
        <h:outputText value="#{messages.wait_please}..."/>
    </h:panelGrid>
</r:popupPanel>

<r:messages globalOnly="true" ajaxRendered="true"/>

<h:form>

    <r:dragIndicator id="indicator" acceptClass="indicator-acpt" draggingClass="indicator-drag"
                     rejectClass="indicator-rejt"/>

    <!-- oncontextmenu="window.event.returnValue = false" -->
    <a:outputPanel id="grid_map">

        <br/>

        <s:div style="width: 100%;text-align: center;">
            <r:inplaceInput value="#{buildGridMapHome.instance.name}" style="min-width: 200px;"/>


        </s:div>
        <br/>
        <table oncontextmenu="window.event.returnValue = false"
               style="width:#{buildGridMapHome.colList.size * 62}px; border: 0px solid #98bf21;padding: 0px 0px 0px 0px;border-collapse: collapse;border-spacing:1px"
               id="buildGridMap">

            <a:repeat value="#{buildGridMapHome.colList}" var="_col">
                <col style="width:60px;height: 60px;"></col>
            </a:repeat>

            <tbody>
            <tr>
                <a:repeat value="#{buildGridMapHome.instance.houseGridTitleList}" var="_unit">
                    <th colspan="#{_unit.colspan}" rowspan="1" style="height: 40px;">
                        #{_unit.title}
                    </th>
                </a:repeat>
            </tr>
            <a:repeat value="#{buildGridMapHome.instance.gridRowList}" var="_floor">
                <tr style="height: 60px">

                    <th style="height: 60px">
                        #{_floor.title}
                    </th>

                    <a:repeat value="#{_floor.gridBlockList}" var="_house">
                        <td colspan="#{_house.colspan}"
                            rowspan="#{_house.rowspan}"
                            style="height: #{_house.rowspan * 60}px;text-align: center;vertical-align: middle;">
                            <r:panel
                                    style="width:100%; height: 100%;padding:0px;border: 0px;">
                                <r:dropTarget id="grid_target" acceptedTypes="house block newHouse"
                                              dropValue="#{_house}"
                                              execute="@this"
                                              status="processWaiting"
                                              dropListener="#{buildGridMapHome.processDrop}"
                                              render="grid_map,idle,toolbar"/>

                                <a:outputPanel layout="block" styleClass="rf-ind-drag"
                                               rendered="#{not empty _house.house}">
                                    <r:dragSource id="grid_source" type="block" dragIndicator="indicator"
                                                  dragValue="#{_house}"/>

                                    <h:outputText value="#{_house.house.houseOrder}"/>


                                    <r:contextMenu mode="client" showEvent="contextmenu" style="text-align: left;">
                                        <r:menuItem action="#{buildGridMapHome.idleHouse}"
                                                    label="#{messages.BuildMapAction_idle}"
                                                    status="processWaiting"
                                                    mode="ajax" execute="@this" render="grid_map,idle,toolbar">
                                            <a:param name="blockId" value="#{_house.id}"
                                                     assignTo="#{buildGridMapHome.selectBlockId}"/>
                                        </r:menuItem>
                                        <r:menuItem action="#{buildGridMapHome.deleteHouse}"
                                                    label="#{messages.BuildMapAction_delete}"
                                                    status="processWaiting" mode="ajax" execute="@this"
                                                    onclick="JavaScript:if(confirm('#{messages.deleteConfirm}')){}else{return false;}"
                                                    render="grid_map">
                                            <a:param name="blockId" value="#{_house.id}"
                                                     assignTo="#{buildGridMapHome.selectBlockId}"/>
                                        </r:menuItem>
                                        <r:menuItem label="#{messages.BuildMapAction_edit}" mode="ajax" execute="@this"
                                                    action="#{actionExecuteState.clearState}"
                                                    oncomplete="#{r:component('editPanel')}.show();"
                                                    render="editPanel_form">
                                            <a:param name="blockId" value="#{_house.id}"
                                                     assignTo="#{buildGridMapHome.selectBlockId}"/>
                                        </r:menuItem>


                                    </r:contextMenu>

                                </a:outputPanel>


                            </r:panel>
                        </td>
                    </a:repeat>
                </tr>
            </a:repeat>
            </tbody>
        </table>
    </a:outputPanel>


    <r:popupPanel id="idleHousePopup" resizeable="false" autosized="true" modal="false">
        <f:facet name="header">
            <h:outputText value="#{messages.IdleHouse}"/>
        </f:facet>
        <f:facet name="controls">

        </f:facet>
        <r:panel styleClass="new-house-panel">
            <a:outputPanel layout="block" styleClass="rf-ind-drag">
                <r:dragSource type="newHouse" dragValue="newHouse" dragIndicator="indicator"/>
            </a:outputPanel>
        </r:panel>
        <r:panel styleClass="idle-house-panel">
            <h:dataTable id="idle" value="#{buildGridMapHome.idleHouses}" var="_idleHouse">
                <h:column>
                    <a:outputPanel layout="block" styleClass="rf-idle-drag">
                        <r:dragSource id="idle_source" type="house" dragValue="#{_idleHouse}"
                                      dragIndicator="indicator"/>
                        <h:outputText value="#{_idleHouse.houseOrder}"/>
                    </a:outputPanel>
                </h:column>
            </h:dataTable>
        </r:panel>
    </r:popupPanel>
</h:form>


<s:decorate template="/layout/edit-modalpanel.xhtml">
    <ui:param name="panelId" value="editPanel"/>
    <ui:param name="panelTitle" value="#{messages.House}"/>
    <ui:define name="controls">
        <a:commandButton immediate="true"
                         execute="@this" image="/img/close.png"
                         onclick="#{r:component(panelId)}.hide(); return false;">
        </a:commandButton>
    </ui:define>


    <ui:define name="formContent">
        <a:outputPanel rendered="#{not empty buildGridMapHome.operBlock}">

            <a:outputPanel rendered="#{buildGridMapHome.blockHouseCanEdit}">

                <r:panel id="#{panelId}_inputs">
                    <div class="edit">

                        <ui:include src="/layout/house/HouseEdit.xhtml">
                            <ui:param name="house" value="#{buildGridMapHome.operBlock.house}"/>
                        </ui:include>

                        <div style="clear:both">
                            <span class="required">*</span>
                            #{messages.requiredFields}
                        </div>
                    </div>
                </r:panel>


                <h:panelGrid columns="1" style="width: 100%; text-align: right">
                    <a:outputPanel id="#{panelId}_buttons">
                        <div class="actionButtons">
                            <a:commandButton value="#{messages.ok}" execute="@form"
                                             action="#{actionExecuteState.actionExecute}"
                                             data="#{actionExecuteState.lastState}" render="grid_map"
                                             oncomplete="if (event.data == 'success'){#{r:component(panelId)}.hide(); return true;} else return false;"/>
                        </div>
                    </a:outputPanel>
                </h:panelGrid>
            </a:outputPanel>


            <s:div rendered="#{not buildGridMapHome.blockHouseCanEdit}" style="width: 1020px">
                <table class="detailsTable" >
                    <tr>
                        <td class="detailsHead"></td>
                    </tr>
                </table>
                <ui:include src="/layout/house/HouseInfoView.xhtml">
                    <ui:param name="houseInfo" value="#{buildGridMapHome.operBlock.house}"/>
                </ui:include>
            </s:div>
        </a:outputPanel>



    </ui:define>
</s:decorate>


</h:body>

</f:view>
</html>