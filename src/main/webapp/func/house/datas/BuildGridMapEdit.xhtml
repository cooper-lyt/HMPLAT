<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:a="http://richfaces.org/a4j" xmlns:r="http://richfaces.org/rich"
      xmlns:s="http://jboss.org/schema/seam/taglib">
<f:view
        contentType="text/html">

<h:head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <!-- meta http-equiv="X-UA-Compatible" content="IE=8"/-->
    <title>#{messages.mainTitle}</title>
    <link rel="shortcut icon" href="#{request.contextPath}/favicon.ico"/>

    <h:outputStylesheet name="application.css"/>
    <h:outputStylesheet name="theme.css"/>
    <ui:insert name="head"/>
</h:head>
<h:body onload="#{r:component('idleHousePopup')}.show();">
<s:div style="padding: 10px;">
<a:queue requestDelay="0" ignoreDupResponses="true"/>
<h:form>
    <r:toolbar id="toolbar" itemSeparator="line" height="30">

        <r:toolbarGroup rendered="#{buildHome.buildGridPages.size gt 1}">
            <a:outputPanel>
    <span class="rf-ds">
            <a:commandLink immediate="true" execute="@this"
                           action="#{buildGridMapHome.firstPage}"
                           render="grid_map,toolbar"
                           styleClass="rf-ds-btn rf-ds-btn-first #{(buildGridMapHome.instance.order ge 2) ? '' : 'rf-ds-dis'}"
                           disabled="#{not (buildGridMapHome.instance.order ge 2)}"
                           value="#{messages.left}#{messages.left}">
                <a:attachQueue requestDelay="0"/>
            </a:commandLink>

            <a:commandLink immediate="true" execute="@this"
                           render="grid_map,toolbar"
                           action="#{buildGridMapHome.previousPage}"
                           disabled="#{not (buildGridMapHome.instance.order ge 2)}"
                           styleClass="rf-ds-btn rf-ds-btn-prev #{(buildGridMapHome.instance.order ge 2) ? '' : 'rf-ds-dis'}"
                           value="#{messages.left}">
                <a:attachQueue requestDelay="0"/>
            </a:commandLink>


        <a:repeat value="#{buildHome.buildGridPages}" var="_page">

            <a:commandLink immediate="true" execute="@this"
                           render="grid_map,toolbar" action="#{buildGridMapHome.toPage}"
                           disabled="#{_page.order eq buildGridMapHome.instance.order}"
                           styleClass="rf-ds-nmb-btn #{(_page.order eq buildGridMapHome.instance.order) ? 'rf-ds-act' : ''}"
                           value="#{_page.order}">
                <a:attachQueue requestDelay="0"/>
                <a:param value="#{_page.order}" assignTo="#{buildGridMapHome.gotoPage}"/>
            </a:commandLink>

        </a:repeat>





            <a:commandLink immediate="true" execute="@this"
                           render="grid_map,toolbar"
                           styleClass="rf-ds-btn rf-ds-btn-next #{(buildGridMapHome.instance.order lt buildHome.instance.buildGridMaps.size) ? '' : 'rf-ds-dis'}"
                           action="#{buildGridMapHome.nextPage}"
                           disabled="#{not (buildGridMapHome.instance.order lt buildHome.instance.buildGridMaps.size)}"
                           value="#{messages.right}">
                <a:attachQueue requestDelay="0"/>
            </a:commandLink>

            <a:commandLink immediate="true" execute="@this"
                           render="grid_map,toolbar"
                           styleClass="rf-ds-btn rf-ds-btn-last #{(buildGridMapHome.instance.order lt buildHome.instance.buildGridMaps.size) ? '' : 'rf-ds-dis'}"
                           disabled="#{not (buildGridMapHome.instance.order lt buildHome.instance.buildGridMaps.size)}"
                           action="#{buildGridMapHome.lastPage}"
                           value="#{messages.right}#{messages.right}">
                <a:attachQueue requestDelay="0"/>
            </a:commandLink>

    </span>
            </a:outputPanel>
        </r:toolbarGroup>

        <r:toolbarGroup>
            <h:graphicImage value="/img/icons/create.gif"/>
            <a:commandLink value="#{(empty buildHome.buildGridPages) ? messages.UploadGridXML : messages.AddGridXML}"
                           immediate="true" execute="@this"
                           oncomplete="#{r:component('updateFilePopup')}.show(); return false;">
                <a:attachQueue requestDelay="0"/>
                <a:param value="#{false}" assignTo="#{buildGridMapHome.replaceGridMap}"/>
            </a:commandLink>
        </r:toolbarGroup>

        <r:toolbarGroup rendered="#{not empty buildHome.buildGridPages}">
            <h:graphicImage value="/img/icons/out_edit.png"/>
            <a:commandLink value="#{messages.UpdateGridXML}" immediate="true" execute="@this"
                           oncomplete="#{r:component('updateFilePopup')}.show(); return false;">
                <a:attachQueue requestDelay="0"/>
                <a:param value="#{true}" assignTo="#{buildGridMapHome.replaceGridMap}"/>
            </a:commandLink>
        </r:toolbarGroup>

        <r:toolbarGroup rendered="#{not empty buildHome.buildGridPages}">
            <h:graphicImage value="/img/icons/delete.png"/>
            <a:commandLink value="#{messages.DeletePage}"
                           onclick="#{r:component('deletePageConfirm')}.show(); return false;">
            </a:commandLink>
        </r:toolbarGroup>


        <r:toolbarGroup rendered="#{not empty buildHome.buildGridPages}">
            <h:graphicImage value="/img/icons/save_all.gif"/>

            <a:commandLink value="#{messages.save}" status="processWaiting" action="#{buildGridMapHome.saveGridMap}"
                           render="grid_map,idle">
                <a:attachQueue requestDelay="0"/>
            </a:commandLink>
        </r:toolbarGroup>

        <r:toolbarGroup location="right">
            <a:status>
                <f:facet name="start">
                    <h:graphicImage value="/img/connect.gif"/>
                </f:facet>
                <f:facet name="stop">
                    <h:graphicImage value="/img/connect_idle.gif"/>
                </f:facet>
            </a:status>
            <s:button onclick="JavaScript:if(confirm('#{messages.ExitGridMapEditConfirm}')){}else{return false;}"
                      propagation="end"
                      view="/func/house/datas/ProjectBuildEdit.xhtml" value="#{messages.return} #{buildHome.instance.buildNo}">
                <f:param name="projectId" value="#{buildHome.instance.project.id}"/>
            </s:button>
        </r:toolbarGroup>
    </r:toolbar>


    <r:popupPanel id="deletePageConfirm" width="300" height="140" modal="true" resizeable="false">

        <f:facet name="header">
            <h:outputText value="#{messages.deleteConfirm}"/>
        </f:facet>

        <f:facet name="controls">
            <a:commandButton immediate="true"
                             execute="@this" image="/img/close.png"
                             onclick="#{r:component('deletePageConfirm')}.hide(); return false;">
            </a:commandButton>
        </f:facet>
        <a:outputPanel>

            <s:div style="height: 60px">
                <h:outputText value="#{messages.HowOperDeleteGridHouse}"
                              style="font-size: 1.2em; font-weight: bold;"/>
                <br/>
                <h:outputText value="#{messages.DeleteAllHouseDescript}"/>
                <br/>
                <h:outputText value="#{messages.IdleAllHouseDescript}"/>
            </s:div>
            <h:panelGrid columns="1" style="width: 100%; text-align: right">
                <a:outputPanel id="#{panelId}_buttons">


                    <a:commandButton action="#{buildGridMapHome.deleteGridMapAndHouse}"
                                     render="grid_map,idle,toolbar" status="processWaiting"
                                     onclick="#{r:component('deletePageConfirm')}.hide();"
                                     value="#{messages.BuildMapAction_delete}" execute="@this" immediate="true">
                        <a:attachQueue requestDelay="0"/>
                    </a:commandButton>


                    <a:commandButton action="#{buildGridMapHome.deleteGridMapIdleHouse}"
                                     value="#{messages.BuildMapAction_idle}"
                                     onclick="#{r:component('deletePageConfirm')}.hide();"
                                     status="processWaiting" immediate="true"
                                     execute="@this" render="grid_map,idle,toolbar">
                        <a:attachQueue requestDelay="0"/>
                    </a:commandButton>

                    <a:commandButton immediate="true"
                                     execute="@this" value="#{messages.cancel}"
                                     onclick="#{r:component('deletePageConfirm')}.hide(); return false;">
                    </a:commandButton>
                </a:outputPanel>
            </h:panelGrid>
        </a:outputPanel>
    </r:popupPanel>

</h:form>


<r:popupPanel id="updateFilePopup" modal="true" autosized="true" resizeable="false">
    <f:facet name="header">
        <h:outputText value="#{messages.UploadBuildGridXml}"/>
    </f:facet>
    <f:facet name="controls">
        <a:commandButton immediate="true" execute="@this" image="/img/close.png"
                         onclick="#{r:component('updateFilePopup')}.hide();return false;"/>
    </f:facet>


    <h:form enctype="multipart/form-data">


        <r:fileUpload maxFilesQuantity="5" title="#{messages.deployJpdlPar}"
                      serverErrorLabel="#{messages.fileUpload_serverErrorLabel}"
                      deleteLabel="#{messages.fileUpload_deleteLabel}"
                      doneLabel="#{messages.fileUpload_doneLabel}"
                      cancelEntryControlLabel="#{messages.fileUpload_cancelEntryControlLabel}"
                      addLabel="#{messages.fileUpload_addControlLabel}"
                      progressLabel="#{messages.fileUpload_progressLabel}"
                      sizeExceededLabel="#{messages.fileUpload_sizeErrorLabel}"
                      uploadLabel="#{messages.fileUpload_uploadControlLabel}"
                      transferErrorLabel="#{messages.fileUpload_transferErrorLabel}"
                      clearAllLabel="#{messages.fileUpload_clearAllControlLabel}"
                      clearLabel="#{messages.fileUpload_clearControlLabel}"
                      stopControlLabel="#{messages.fileUpload_stopControlLabel}"
                      fileUploadListener="#{buildGridMapHome.templeteFileUploadListener}"
                      ontyperejected="alert('#{messages.unsupportedProcessDefFile}');"
                      acceptedTypes="xml">

            <a:ajax event="uploadcomplete"
                    oncomplete="#{r:component('updateFilePopup')}.hide();"
                    execute="@none"
                    status="processWaiting"
                    render="grid_map,idle,toolbar"/>
        </r:fileUpload>
    </h:form>
</r:popupPanel>


<h:outputStylesheet>


.panelc {
    width: 25%;
}

.footerClass {
    text-align: center;
    padding-top: 5px;
}

.rf-ind-drag {
    font-size: 13px;
    cursor: pointer;

    width: 100%;
    height: 100%;
    border: 0px solid gray;
    padding: 0px
}

.rf-idle-drag {
    font-size: 11px;
    cursor: pointer;
    width: 100%;
    height: 100%;
    padding: 0px;
}

.indicator-drag {
    border: 1px solid #000000;
    background-color: gray;
    opacity: 0.3;
    margin: 2px;
    height: 64px;
    width: 64px;
    text-align: center;
    background: url('#{facesContext.externalContext.requestContextPath}/img/house/dragHouse.png') center center no-repeat;
}

.indicator-acpt {
    height: 48px;
    width: 48px;
    border: 1px dotted green;
    background-color: green;
    background: url('#{facesContext.externalContext.requestContextPath}/img/house/dragInHouse.png') center center no-repeat;
}

.indicator-rejt {
    height: 48px;
    width: 48px;
    border: 1px dotted red;
    background-color: red;
    background: url('#{facesContext.externalContext.requestContextPath}/img/house/dragStopHouse.png') center center no-repeat;
}

.rf-p-b {
    width: 100%;
    height: 100%;
    padding: 0px;
}


.idle-house-con {
    float: left;
    width: 50px;
    height: 50px;
    margin: 2px;
    text-align: center;
    position: relative;
}



.totalHeader {
    background: #{a4jSkin.tableSubHeaderBackgroundColor};
}

</h:outputStylesheet>

<a:status id="processWaiting" name="processWaiting"
          onstart="#{r:component('wait')}.show()"
          onstop="#{r:component('wait')}.hide()"/>
<r:popupPanel id="wait" modal="true" autosized="true"
              moveable="false" resizeable="false">
    <h:panelGrid columns="3">
        <h:graphicImage value="/img/smalBlueWait.gif"/>
        &#160;
        <h:outputText value="#{messages.wait_please}..."/>
    </h:panelGrid>
</r:popupPanel>

<r:messages globalOnly="true" ajaxRendered="true"/>

<h:form>

<r:dragIndicator id="indicator" acceptClass="indicator-acpt" draggingClass="indicator-drag"
                 rejectClass="indicator-rejt"/>

<!-- oncontextmenu="window.event.returnValue = false" -->
<a:outputPanel id="grid_map">
<br/>

<s:div style="width: 100%;text-align: center;">
    <r:inplaceInput value="#{buildGridMapHome.instance.name}" style="min-width: 200px;"/>
</s:div>


<br/>

<s:decorate template="/layout/house/BuildGridMapTemplate.xhtml">

    <ui:param name="gridMap" value="#{buildGridMapHome.instance}"/>
    
                        <r:dropTarget id="grid_target"
                                      acceptedTypes="house block #{empty _house.house ? 'newHouse' : ''}"
                                      dropValue="#{_house}"
                                      execute="@this"
                                      status="processWaiting"
                                      dropListener="#{buildGridMapHome.processDrop}"
                                      render="grid_map,idle"/>

                        <a:outputPanel layout="block" styleClass="rf-ind-drag"
                                       rendered="#{not empty _house.house}">
                            <r:dragSource id="grid_source" type="block" dragIndicator="indicator"
                                          dragValue="#{_house}"/>
                            <a:outputPanel>
                                <h:outputText value="#{_house.house.houseOrder}"
                                              style="font-size: 1em; font-weight: bold;#{_house.house.validator ? 'color: #000000;' : 'color: red;' }"/>
                                <r:tooltip styleClass="tooltip-custom-body"
                                           layout="block" mode="client"
                                           rendered="#{(not _house.house.detailsValid) or (not _house.house.orderValid)}">
                                    <s:span rendered="#{not _house.house.detailsValid}" style="white-space: normal">
                                        <h:outputText styleClass="errors" value="#{messages.HouseDetailsError}"/>

                                    </s:span>
                                    <s:span rendered="#{not _house.house.orderValid}" style="white-space: normal">
                                        <h:outputText styleClass="errors" value="#{messages.HouseOrderConflict}"/>

                                    </s:span>


                                </r:tooltip>

                            </a:outputPanel>


                            <br/>
                            <h:outputText value="#{_house.house.houseArea}"
                                          style="font-size: 0.9em;color: #797268;">
                                <f:convertNumber pattern="#0.000"/>
                            </h:outputText>
                            <br/>
                            <h:outputText value="#{_house.house.useArea}"
                                          style="font-size: 0.9em;color: #797268;">
                                <f:convertNumber pattern="#0.000"/>
                            </h:outputText>

                            <r:contextMenu mode="client" showEvent="contextmenu" style="text-align: left;"
                                           popupWidth="100">
                                <r:menuItem action="#{buildGridMapHome.deleteBlockHouse}"
                                            icon="/img/icons/delete-red.png"
                                            label="#{messages.BuildMapAction_delete}"
                                            status="processWaiting" mode="ajax" execute="@this"
                                            onclick="JavaScript:if(confirm('#{messages.deleteConfirm}')){}else{return false;}"
                                            render="grid_map">
                                    <a:param name="blockId" value="#{_house.id}"
                                             assignTo="#{buildGridMapHome.selectBlockId}"/>
                                </r:menuItem>
                                <r:menuItem action="#{buildGridMapHome.idleBlockHouse}"
                                            label="#{messages.BuildMapAction_idle}"
                                            status="processWaiting" icon="/img/icons/delete-blue.png"
                                            mode="ajax" execute="@this" render="grid_map,idle">
                                    <a:param name="blockId" value="#{_house.id}"
                                             assignTo="#{buildGridMapHome.selectBlockId}"/>
                                </r:menuItem>

                                <r:menuItem label="#{messages.BuildMapAction_edit}" mode="ajax" execute="@this"
                                            action="#{actionExecuteState.clearState}"
                                            icon="/img/icons/info-blue.png"
                                            oncomplete="#{r:component('editPanel')}.show();"
                                            render="editPanel_form">
                                    <a:param name="blockId" value="#{_house.id}"
                                             assignTo="#{buildGridMapHome.selectBlockId}"/>
                                </r:menuItem>
                            </r:contextMenu>

                        </a:outputPanel>


                        <h:graphicImage
                                style="height: 16px;padding: 0px;border: 0px;position: absolute;bottom: 0;left: 0;"
                                rendered="#{(not empty _house.house) and (_house.house.lock)}"
                                value="/img/house/lock.png" title="#{messages.LockDecription}"/>

                <ui:define name="house-action">
                    <a:commandButton rendered="#{not empty _house.house}"
                                     image="/img/icons/delete-blue.png"
                                     render="deleteActionForm"
                                     oncomplete="#{r:component('deleteHouseConfirm')}.show();"
                                     title="#{messages.BuildMapAction_delete}"
                                     execute="@this" immediate="true">
                        <a:param name="blockId" value="#{_house.id}"
                                 assignTo="#{buildGridMapHome.selectBlockId}"/>
                        <a:attachQueue requestDelay="0"/>
                    </a:commandButton>

                    <a:commandButton style="padding-left: 1px; padding-right: 1px;"
                                     image="/img/icons/info-blue.png"
                                     action="#{actionExecuteState.clearState}"
                                     rendered="#{not empty _house.house}"
                                     title="#{messages.BuildMapAction_edit}"
                                     oncomplete="#{r:component('editPanel')}.show();"
                                     immediate="true" execute="@this" render="editPanel_form">
                        <a:param name="blockId" value="#{_house.id}"
                                 assignTo="#{buildGridMapHome.selectBlockId}"/>
                        <a:attachQueue requestDelay="0"/>
                    </a:commandButton>
                </ui:define>


</s:decorate>
<br/>
<r:dataTable style="float: right;" value="#{buildGridMapHome.useTypeTotalList}" var="_entry" headerClass="totalHeader">
    <r:column headerClass="totalHeader">
        <f:facet name="header">
            #{messages.House_UseType}
        </f:facet>
        #{_entry.key.value}

        <f:facet name="footer">
            #{messages.recordTotal}
        </f:facet>
    </r:column>

    <r:column headerClass="totalHeader">
        <f:facet name="header">
            #{messages.count}
        </f:facet>
        #{_entry.value.count}

        <f:facet name="footer">
            #{buildGridMapHome.houseCount}
        </f:facet>

    </r:column>

    <r:column headerClass="totalHeader">
        <f:facet name="header">
            #{messages.House_Area}
        </f:facet>
        <h:outputText value="#{_entry.value.area}">
            <f:convertNumber pattern="#0.000"/>
        </h:outputText>

        <f:facet name="footer">
            <h:outputText value="#{buildGridMapHome.totalHouseArea}">
                <f:convertNumber pattern="#0.000"/>
            </h:outputText>

        </f:facet>
    </r:column>

    <r:column headerClass="totalHeader">
        <f:facet name="header">
            #{messages.House_UseArea}
        </f:facet>
        <h:outputText value="#{_entry.value.useArea}">
            <f:convertNumber pattern="#0.000"/>
        </h:outputText>

        <f:facet name="footer">
            <h:outputText value="#{buildGridMapHome.totalHouseUseArea}">
                <f:convertNumber pattern="#0.000"/>
            </h:outputText>

        </f:facet>
    </r:column>

</r:dataTable>
</a:outputPanel>


<r:popupPanel id="idleHousePopup" resizeable="true" minWidth="100" minHeight="264" width="160" height="200"
              autosized="false" modal="false">
    <f:facet name="header">
        <h:outputText value="#{messages.IdleHouse}"/>
    </f:facet>
    <f:facet name="controls">
        <a:commandButton style="padding: 2px" image="/img/icon24/fill.png" title="#{messages.GridFillNew}"
                         status="processWaiting" action="#{buildGridMapHome.generateHouse}" execute="@this"
                         immediate="true" render="grid_map">
            <a:attachQueue requestDelay="0"/>
        </a:commandButton>


        <a:commandButton style="padding: 2px" image="/img/icon24/autoformat.png" action="#{buildGridMapHome.matchIdle}"
                         status="processWaiting" title="#{messages.GridFillIdle}" execute="@this" immediate="true"
                         render="grid_map,idle">
            <a:attachQueue requestDelay="0"/>
        </a:commandButton>
    </f:facet>
    <a:outputPanel id="idle">
        <r:jQuery selector=".idle-house-con" event="mouseover"
                  query="jQuery(this).find('.house-act').stop().fadeIn(10);"/>
        <r:jQuery selector=".idle-house-con" event="mouseout" query="jQuery(this).find('.house-act').fadeOut(10);"/>

        <r:panel
                style="margin: 2px;float: left; width: 50px;height: 50px;background: url('#{facesContext.externalContext.requestContextPath}/img/house/createHouse.gif') center center no-repeat;">
            <a:outputPanel layout="block" styleClass="rf-ind-drag">
                <r:dragSource type="newHouse" dragValue="newHouse" dragIndicator="indicator"/>
            </a:outputPanel>
        </r:panel>
        <a:repeat value="#{idleHouses}" var="_idleHouse">
            <r:panel styleClass="idle-house-con">
                <a:outputPanel layout="block" styleClass="rf-idle-drag">

                    <r:dragSource id="idle_source" type="house" dragValue="#{_idleHouse}"
                                  dragIndicator="indicator"/>

                    <a:outputPanel>
                        <h:outputText value="#{_idleHouse.houseOrder}"
                                      style="font-size: 1em; font-weight: bold;#{_idleHouse.validator ? 'color: #000000;' : 'color: red;' }"/>
                        <r:tooltip styleClass="tooltip-custom-body"
                                   layout="block" mode="client"
                            rendered="#{(not _idleHouse.detailsValid) or (not _idleHouse.orderValid)}">
                            <s:span rendered="#{not _idleHouse.detailsValid}" style="white-space: normal">
                                <h:outputText styleClass="errors" value="#{messages.HouseDetailsError}"/>

                            </s:span>
                            <s:span rendered="#{not _idleHouse.orderValid}" style="white-space: normal">
                                <h:outputText styleClass="errors" value="#{messages.HouseOrderConflict}"/>
                            </s:span>
                        </r:tooltip>

                    </a:outputPanel>

                    <br/>
                    <h:outputText value="#{_idleHouse.houseArea}" style="font-size: 0.9em;color: #797268;">
                        <f:convertNumber pattern="#0.000"/>
                    </h:outputText>
                    <br/>
                    <h:outputText value="#{_idleHouse.useArea}" style="font-size: 0.9em;color: #797268;">
                        <f:convertNumber pattern="#0.000"/>
                    </h:outputText>
                </a:outputPanel>
                <h:graphicImage rendered="#{_idleHouse.lock}"
                                style="height: 16px;padding:0px;border: 0px;position:absolute; bottom:0;left:0"
                                value="/img/house/lock.png" title="#{messages.LockDecription}"/>
                <s:div styleClass="house-act">
                    <a:commandButton rendered="#{not _idleHouse.lock}"
                                     image="/img/icons/delete-red.png"
                                     render="idle"
                                     onclick="JavaScript:if(confirm('#{messages.deleteConfirm}')){}else{return false;}"
                                     action="#{buildGridMapHome.deleteIdleHouse}"
                                     title="#{messages.BuildMapAction_delete}"
                                     execute="@this" immediate="true">
                        <a:attachQueue requestDelay="0"/>
                    </a:commandButton>

                    <a:commandButton style="padding-left: 1px; padding-right: 1px;"
                                     image="/img/icons/info-blue.png"
                                     action="#{buildGridMapHome.selectedIdleHouse}"
                                     title="#{messages.BuildMapAction_edit}"
                                     oncomplete="#{r:component('editPanel')}.show();"
                                     immediate="true" execute="@this" render="editPanel_form">
                        <a:attachQueue requestDelay="0"/>
                    </a:commandButton>


                </s:div>
            </r:panel>
        </a:repeat>
    </a:outputPanel>
</r:popupPanel>


<r:popupPanel id="deleteHouseConfirm" width="300" height="140" modal="true" resizeable="false">

    <f:facet name="header">
        <h:outputText value="#{messages.deleteConfirm}"/>
    </f:facet>

    <f:facet name="controls">
        <a:commandButton immediate="true"
                         execute="@this" image="/img/close.png"
                         onclick="#{r:component('deleteHouseConfirm')}.hide(); return false;">
        </a:commandButton>
    </f:facet>
    <a:outputPanel id="deleteActionForm">

        <s:div style="height: 60px">
            <h:outputText value="#{buildGridMapHome.selectHouse.houseOrder}"
                          style="font-size: 1.2em; font-weight: bold;"/>
            <h:graphicImage rendered="#{not buildGridMapHome.houseCanEdit}"
                            value="/img/house/lock.png" title="#{messages.LockDecription}"/>
            <br/>
            <h:outputText value="#{messages.DeleteMapHouseInfo}"/>
            <br/>
            <h:outputText value="#{messages.IdleMapHouseInfo}"/>
        </s:div>
        <h:panelGrid columns="1" style="width: 100%; text-align: right">
            <a:outputPanel id="#{panelId}_buttons">


                <a:commandButton action="#{buildGridMapHome.deleteBlockHouse}"
                                 disabled="#{not buildGridMapHome.houseCanEdit}"
                                 render="grid_map" status="processWaiting"
                                 onclick="#{r:component('deleteHouseConfirm')}.hide();"
                                 value="#{messages.BuildMapAction_delete}" execute="@this" immediate="true">
                    <a:attachQueue requestDelay="0"/>
                </a:commandButton>


                <a:commandButton action="#{buildGridMapHome.idleBlockHouse}"
                                 value="#{messages.BuildMapAction_idle}"
                                 onclick="#{r:component('deleteHouseConfirm')}.hide();"
                                 status="processWaiting" immediate="true"
                                 execute="@this" render="grid_map,idle">
                    <a:attachQueue requestDelay="0"/>
                </a:commandButton>

                <a:commandButton immediate="true"
                                 execute="@this" value="#{messages.cancel}"
                                 onclick="#{r:component('deleteHouseConfirm')}.hide(); return false;">
                </a:commandButton>
            </a:outputPanel>
        </h:panelGrid>
    </a:outputPanel>
</r:popupPanel>

</h:form>


<s:decorate template="/layout/edit-modalpanel.xhtml">
    <ui:param name="panelId" value="editPanel"/>
    <ui:param name="panelTitle" value="#{messages.House}"/>
    <ui:define name="controls">
        <a:commandButton immediate="true"
                         execute="@this" image="/img/close.png"
                         onclick="#{r:component(panelId)}.hide(); return false;">
        </a:commandButton>
    </ui:define>


    <ui:define name="formContent">
        <a:outputPanel rendered="#{not empty buildGridMapHome.selectHouse}">

            <a:outputPanel rendered="#{buildGridMapHome.houseCanEdit}">

                <r:panel id="#{panelId}_inputs">
                    <div class="edit">

                        <ui:include src="/layout/house/HouseEdit.xhtml">
                            <ui:param name="house" value="#{buildGridMapHome.selectHouse}"/>
                        </ui:include>

                        <div style="clear:both">
                            <span class="required">*</span>
                            #{messages.requiredFields}
                        </div>
                    </div>
                </r:panel>


                <h:panelGrid columns="1" style="width: 100%; text-align: right">
                    <a:outputPanel id="#{panelId}_buttons">
                        <div class="actionButtons">
                            <a:commandButton value="#{messages.ok}" execute="@form"
                                             action="#{actionExecuteState.actionExecute}"
                                             data="#{actionExecuteState.lastState}" render="grid_map,idle"
                                             oncomplete="if (event.data == 'success'){#{r:component(panelId)}.hide(); return true;} else return false;"/>
                        </div>
                    </a:outputPanel>
                </h:panelGrid>
            </a:outputPanel>


            <s:div rendered="#{not buildGridMapHome.houseCanEdit}" style="width: 980px">
                <table class="detailsTable">
                    <tr>
                        <td class="detailsHead"></td>
                    </tr>
                </table>
                <ui:include src="/layout/house/HouseInfoView.xhtml">
                    <ui:param name="houseInfo" value="#{buildGridMapHome.selectHouse}"/>
                </ui:include>
            </s:div>
        </a:outputPanel>


    </ui:define>
</s:decorate>

</s:div>
</h:body>

</f:view>
</html>