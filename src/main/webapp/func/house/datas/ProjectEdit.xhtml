<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:a="http://richfaces.org/a4j"
                xmlns:rich="http://richfaces.org/rich"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:s="http://jboss.org/schema/seam/taglib"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
                template="/layout/template-edit.xhtml">
    <div class="setup-header">
        <h1>#{projectHome.idDefined ? messages.edit :  messages.create} #{messages.Project}</h1>
    </div>


    <rich:messages globalOnly="true" ajaxRendered="true"/>


    <h:form>


        <a:jsFunction name="showSectionSelectMenu" action="#{sectionSearch.showSectionList}"
                      execute="districtInput,sectionNameField" render="sectionSelectPanel">

            <a:attachQueue requestDelay="0"/>
        </a:jsFunction>


        <s:decorate id="IdField" styleClass="form-group" template="/layout/edit-big.xhtml">
            <ui:define name="label">
                #{messages.Project_id}
            </ui:define>
            <ui:param name="for" value="idInput"/>
            <ui:param name="status" value="idStatus"/>
            <h:inputText id="idInput" value="#{projectHome.instance.id}" required="true"
                         styleClass="form-control" style="width: 220px;"
                         label="#{messages.Project_id}" maxlength="32"
                         valueChangeListener="#{projectHome.verifyIdAvailable}"
                         disabled="#{projectHome.managed}">
                <f:validateRequired/>
                <a:ajax event="change" render="IdField" status="idStatus"/>
            </h:inputText>

        </s:decorate>


        <s:decorate id="districtField" styleClass="form-group" template="/layout/edit-big.xhtml">
            <ui:define name="label">
                #{messages.District}
            </ui:define>
            <ui:param name="for" value="districtInput"/>
            <h:selectOneMenu id="districtInput" data-size="10"
                             value="#{districtHome.id}" data-width="100px"
                             styleClass="selectpicker edit-select"
                             label="#{messages.District}" required="true">
                <s:selectItems value="#{allDistrict.resultList}" var="_district"
                               itemValue="#{_district.id}" label="#{_district.name}"/>
            </h:selectOneMenu>
        </s:decorate>


        <s:decorate styleClass="form-group" template="/layout/edit-big.xhtml">
            <ui:define name="label">
                #{messages.Section}<span class="required">*</span>
            </ui:define>


            <div class="btn-group bootstrap-select edit-select">
                <button onclick="showSectionSelectMenu();" type="button" class=" btn dropdown-toggle btn-default"
                        data-toggle="dropdown" aria-expanded="false">

                    <h:outputText id="sectionSelectBtnCaption" styleClass="filter-option pull-left"
                                  value="#{(sectionHome.idDefined) ?  sectionHome.instance.name : ((empty sectionSearch.newSectionName) ? messages.noSelectLabel : sectionSearch.newSectionName)}">
                    </h:outputText>
                    <span class="caret"></span>
                </button>


                <div class="dropdown-menu select-menu-modal-holder">
                    <div class="select-menu-modal">
                        <div class="select-menu-header">
                            <span class="select-menu-title">#{messages.SectionSelect}</span>
                                            <span class="octicon octicon-x js-menu-close"
                                                  aria-label="#{messages.close}"></span>
                        </div>

                        <a:outputPanel layout="block" id="sectionSelectPanel">
                            <div class="select-menu-filters">
                                <div class="select-menu-text-filter">
                                    <h:inputText id="sectionSearchName" autocomplete="off" value="#{sectionSearch.searchName}">
                                        <a:ajax event="keyup" immediate="true" execute="@this"
                                                render="SectionSelectItemList">
                                            <a:attachQueue requestDelay="500"/>
                                        </a:ajax>

                                    </h:inputText>
                                </div>
                            </div>
                            <a:outputPanel layout="block" styleClass="select-menu-list" id="SectionSelectItemList">


                                <a:repeat value="#{sectionSearch.searchResult}" var="_item">

                                    <a:commandLink execute="@this" immediate="true"
                                                   render="sectionSelectBtnCaption,createSectionPanel,districtField"
                                                   styleClass="select-menu-item #{(sectionHome.idDefined and (sectionHome.id eq _item.id)) ? 'selected': ''}">

                                        <f:param name="sectionId" value="#{_item.id}"/>
                                        <f:param name="districtId" value="#{_item.district.id}"/>
                                        <f:param name="newSectionName" value=""/>
                                        <span class="select-menu-item-icon octicon octicon-check"></span>
                                        <span class="select-menu-item-text">#{_item.name}</span>
                                    </a:commandLink>
                                </a:repeat>

                                <a:commandLink action="#{sectionSearch.createBySearchName}"

                                               render="sectionSelectBtnCaption,createSectionPanel" execute="sectionSearchName"
                                               immediate="true"
                                               styleClass="select-menu-item last-visible navigation-focus"
                                               rendered="#{(empty sectionSearch.searchResult) and (not empty sectionSearch.searchName)}">
                                    <a:attachQueue requestDelay="0"/>
                                    <span class="select-menu-item-icon oction oction-check">
                                    </span>

                                    <div class="select-menu-item-text">
                                        <h4>
                                            #{messages.CreateNewSection}:
                                            <span>#{sectionSearch.searchName}</span>

                                        </h4>
                                        <span class="description">#{messages.SectionSearchCreateDescript}</span>
                                    </div>

                                </a:commandLink>
                            </a:outputPanel>

                        </a:outputPanel>

                    </div>
                </div>
            </div>


        </s:decorate>


        <a:outputPanel layout="block" styleClass="upgrade-upsell" id="createSectionPanel">

                <a:outputPanel rendered="#{not sectionHome.idDefined and (not empty sectionSearch.newSectionName)}">
                    <h:inputHidden id="sectionNameField" value="#{sectionHome.instance.name}"/>

                    <div class="form-inline">

                        <s:decorate id="sectionIdField" styleClass="form-group" template="/layout/edit-big.xhtml">
                            <ui:define name="label">
                                #{messages.Section_id}
                            </ui:define>
                            <ui:param name="for" value="sectionIdInput"/>
                            <ui:param name="status" value="sectionIdStatus"/>
                            <h:inputText id="sectionIdInput" required="true" styleClass="form-control" maxlength="32"
                                         label="#{messages.Section_id}" size="32"
                                         value="#{sectionHome.instance.id}" disabled="#{sectionHome.managed}"
                                         valueChangeListener="#{sectionHome.verifyIdAvailable}">
                                <f:validateRequired/>
                                <a:ajax event="change" render="sectionIdField" status="sectionIdStatus"/>
                            </h:inputText>
                            <ui:define name="note">
                                <p class="note">#{messages.PyCodeGen1}#{' '}<strong> <rich:inplaceInput id="pyCodeField"
                                                                                                        value="#{sectionHome.instance.pyCode}"/></strong>#{' '} #{messages.PyCodeGen2}
                                </p>
                            </ui:define>

                        </s:decorate>

                    </div>


                    <s:decorate id="addressField" styleClass="form-group" template="/layout/edit-big.xhtml">
                        <ui:define name="label">
                            #{messages.Section_address}
                        </ui:define>
                        <ui:param name="for" value="SectionAddressInput"/>
                        <h:inputTextarea id="SectionAddressInput" styleClass="form-control" rows="3"
                                         value="#{sectionHome.instance.address}"
                                         label="#{messages.Section_address}">

                        </h:inputTextarea>

                    </s:decorate>


                </a:outputPanel>

        </a:outputPanel>

        <a:jsFunction name="clearDeveloperSearchName" action="#{developerHome.clearSearchName}"
                      render="developerSelectPanel"/>


        <s:decorate styleClass="form-group" template="/layout/edit-big.xhtml">
            <ui:define name="label">
                #{messages.Developer}<span class="required">*</span>
            </ui:define>

            <div class="btn-group bootstrap-select edit-select">
                <button type="button" class=" btn dropdown-toggle btn-default"
                        onclick="clearDeveloperSearchName()"
                        data-toggle="dropdown" aria-expanded="false">

                    <h:outputText id="developerSelectBtnCaption" styleClass="filter-option pull-left"
                                  value="#{(developerHome.idDefined) ? developerHome.instance.name : (( empty developerHome.newDeveloperName) ? messages.noSelectLabel : developerHome.newDeveloperName ) }">
                    </h:outputText>
                    <span class="caret"></span>
                </button>


                <div class="dropdown-menu select-menu-modal-holder">
                    <div class="select-menu-modal">
                        <div class="select-menu-header">
                            <span class="select-menu-title">#{messages.Developer}#{messages.Select}</span>
                                            <span class="octicon octicon-x js-menu-close"
                                                  aria-label="#{messages.close}"></span>
                        </div>

                        <a:outputPanel layout="block" id="developerSelectPanel">
                            <div class="select-menu-filters">
                                <div class="select-menu-text-filter">
                                    <h:inputText id="developerSearchNameInput" value="#{developerHome.searchName}" autocomplete="off">
                                        <a:ajax event="keyup" immediate="true" execute="@this"
                                                render="selectItemList">
                                            <a:attachQueue requestDelay="0"/>
                                        </a:ajax>
                                    </h:inputText>
                                </div>
                            </div>
                            <a:outputPanel layout="block" styleClass="select-menu-list" id="selectItemList">


                                <a:repeat value="#{developerHome.searchResult}" var="_item">
                                    <a:commandLink execute="@this" immediate="true"
                                                   render="developerSelectBtnCaption,createDeveloperPanel"
                                                   styleClass="select-menu-item #{(developerHome.idDefined and (developerHome.id eq _item.id)) ? 'selected': ''}">

                                        <f:param name="newDeveloperName" value=""/>
                                        <f:param name="developerId" value="#{_item.id}"/>
                                        <a:attachQueue requestDelay="0"/>
                                        <span class="select-menu-item-icon octicon octicon-check"></span>
                                        <span class="select-menu-item-text">#{_item.name}</span>
                                    </a:commandLink>
                                </a:repeat>

                                <a:commandLink action="#{developerHome.createBySearchName}"

                                               render="developerSelectBtnCaption,createDeveloperPanel" execute="@this" immediate="true"
                                               styleClass="select-menu-item last-visible navigation-focus"
                                               rendered="#{(empty developerHome.searchResult) and (not empty developerHome.searchName)}">
                                    <a:attachQueue requestDelay="0"/>
                                    <span class="select-menu-item-icon oction oction-check">
                                    </span>

                                    <div class="select-menu-item-text">
                                        <h4>
                                            #{messages.CreateNewDeveloper}:
                                            <span>#{developerHome.searchName}</span>

                                        </h4>
                                        <span class="description">#{messages.DeveloperSearchCreateDescript}</span>
                                    </div>

                                </a:commandLink>
                            </a:outputPanel>

                        </a:outputPanel>

                    </div>
                </div>
            </div>
        </s:decorate>


        <a:outputPanel layout="block" styleClass="upgrade-upsell" id="createDeveloperPanel">


            <a:outputPanel rendered="#{not developerHome.idDefined and (not empty developerHome.newDeveloperName)}">
                <h:inputHidden id="developerName" value="#{developerHome.instance.name}"/>
                <div class="form-inline">
                    <s:decorate id="developerIdField" styleClass="form-group " template="/layout/edit-big.xhtml">
                        <ui:define name="label">
                            #{messages.Developer_id}
                        </ui:define>
                        <ui:param name="for" value="developerIdInput"/>
                        <ui:param name="status" value="developerIdStatus"/>
                        <h:inputText id="developerIdInput" required="true" styleClass="form-control" maxlength="32"
                                     label="#{messages.Developer_id}" size="32"
                                     value="#{developerHome.instance.id}" disabled="#{developerHome.managed}"
                                     valueChangeListener="#{developerHome.verifyIdAvailable}">
                            <f:validateRequired/>
                            <a:ajax event="change" render="developerIdField" status="developerIdStatus"/>
                        </h:inputText>

                        <ui:define name="note">
                            <p class="note">#{messages.PyCodeGen1}#{' '} <strong> <rich:inplaceInput
                                    id="developerPyCodeField"
                                    value="#{developerHome.instance.pyCode}"/></strong>#{' '} #{messages.PyCodeGen2}
                            </p>
                        </ui:define>
                    </s:decorate>
                </div>


            </a:outputPanel>


        </a:outputPanel>


        <s:decorate id="nameField" styleClass="form-group" template="/layout/edit-big.xhtml">
            <ui:define name="label">
                #{messages.Project_name}
            </ui:define>
            <ui:param name="for" value="nameInput"/>
            <ui:param name="status" value="nameStatus"/>
            <h:inputText id="nameInput" value="#{projectHome.instance.name}" required="true"
                         styleClass="form-control"
                         label="#{messages.Project_name}" unique="name" maxlength="50" size="30"
                         valueChangeListener="#{projectHome.verifyUniqueAvailable}">

                <f:validateRequired/>
                <a:ajax event="change" render="nameField" status="nameStatus"/>
            </h:inputText>

        </s:decorate>

        <s:decorate styleClass="form-group" template="/layout/edit-big.xhtml">
            <ui:define name="label">
                #{messages.Project_address}
            </ui:define>
            <ui:param name="for" value="addressInput"/>
            <h:inputTextarea id="addressInput" value="#{projectHome.instance.address}"
                             label="#{messages.Project_address}"
                             styleClass="form-control" rows="3">
                <f:validateLength maximum="200"/>
                <rich:validator event="blur"/>
            </h:inputTextarea>

        </s:decorate>


        <hr/>


        <div class="form-inline">


            <s:decorate styleClass="form-group" template="/layout/edit-inline.xhtml">
                <ui:define name="label">
                    #{messages.Project_buildCount}
                </ui:define>
                <ui:param name="for" value="buildCountInput"/>
                <h:inputText id="buildCountInput" label="#{messages.Project_buildCount}"
                             styleClass="form-control js-only-int" size="5" value="#{projectHome.instance.buildCount}">
                    <f:converter converterId="javax.faces.Integer"/>
                    <f:validateLongRange minimum="0"/>
                    <rich:validator/>
                </h:inputText>


            </s:decorate>


            <s:decorate styleClass="form-group" template="/layout/edit-inline.xhtml">
                <ui:define name="label">
                    #{messages.Project_area}
                </ui:define>
                <ui:param name="for" value="areaInput"/>
                <h:inputText id="areaInput" styleClass="form-control js-only-number"
                             value="#{projectHome.instance.area}"
                             converter="javax.faces.BigDecimal"
                             label="#{messages.Project_area}" size="20">

                    <f:validateDoubleRange minimum="0"/>
                    <rich:validator event="blur"/>
                </h:inputText>


            </s:decorate>


            <s:decorate styleClass="form-group" template="/layout/edit-inline.xhtml">
                <ui:define name="label">
                    #{messages.Project_sumArea}
                </ui:define>
                <ui:param name="for" value="sumAreaInput"/>
                <h:inputText id="sumAreaInput" styleClass="form-control" value="#{projectHome.instance.sumArea}"
                             converter="javax.faces.BigDecimal"
                             label="#{messages.Project_sumArea}" size="20">

                    <f:validateDoubleRange minimum="0"/>
                    <rich:validator event="blur"/>
                </h:inputText>


            </s:decorate>

            <s:decorate styleClass="form-group" template="/layout/edit-inline.xhtml">
                <ui:define name="label">
                    #{messages.Project_mapTime}
                </ui:define>

                <ui:param name="for" value="mapTimeInput"/>
                <h:inputText label="#{messages.Project_mapTime}" value="#{projectHome.instance.mapTime}" styleClass="js-datepicker">
                    <s:convertDateTime pattern="#{messages.datePattern}"/>
                </h:inputText>

            </s:decorate>

            <s:decorate styleClass="form-group" template="/layout/edit-inline.xhtml">
                <ui:define name="label">
                    #{messages.Project_buildSize}
                </ui:define>

                <ui:param name="for" value="buildSizeInput"/>
                <h:selectOneMenu id="buildSizeInput" value="#{projectHome.instance.buildSize}"
                                 styleClass="selectpicker form-control edit-select"
                                 label="#{messages.Project_buildSize}">
                    <s:selectItems value="#{dictionary.getWordList('house.project.buildSize')}" var="_word"
                                   itemValue="#{_word.id}" label="#{_word.value}"
                                   noSelectionLabel="#{messages.noSelectLabelShort}"/>
                </h:selectOneMenu>
            </s:decorate>
        </div>
        <s:decorate styleClass="form-group" template="/layout/edit-inline.xhtml">
            <ui:define name="label">
                #{messages.MapMemo}
            </ui:define>
            <ui:param name="for" value="mapMemoInput"/>
            <h:inputTextarea id="mapMemoInput" value="#{projectHome.instance.address}"
                             label="#{messages.MapMemo}"
                             styleClass="form-control" rows="3">
                <f:validateLength maximum="200"/>
                <rich:validator event="blur"/>
            </h:inputTextarea>

        </s:decorate>

        <hr/>
        <h:commandButton value="#{messages.ok}"
                         action="#{projectEdit.saveProject}"
                         styleClass="button primary first-in-line">
        </h:commandButton>

    </h:form>
</ui:composition>