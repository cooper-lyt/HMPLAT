package com.dgsoft.common.system.model;
// Generated Aug 19, 2014 10:57:39 AM by Hibernate Tools 4.0.0

import org.apache.solr.util.BoundedTreeSet;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.util.HashSet;
import java.util.Set;

/**
 * FileSubscribe generated by hbm2java
 */
@Entity
@Table(name = "FILE_SUBSCRIBE", catalog = "DB_PLAT_SYSTEM", uniqueConstraints = @UniqueConstraint(columnNames = {
        "NAME"}))
public class FileSubscribe implements java.io.Serializable {

    private String id;
    private String name;
    private String description;
    private FileSubscribe parent;
    private Set<FileSubscribe> childSubscribes = new HashSet<FileSubscribe>(0);
    private Set<BusinessNeedFile> businessNeedFiles = new HashSet<BusinessNeedFile>(0);

    public FileSubscribe() {
    }

    @Id
    @Column(name = "ID", unique = true, nullable = false, length = 32)
    @NotNull
    @Size(max = 32)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @Column(name = "NAME", unique = true, nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "DESCRIPTION", nullable = true, length = 500)
    @Size(max = 500)
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @ManyToOne(fetch = FetchType.LAZY, optional = true, cascade = CascadeType.ALL)
    @JoinColumn(name = "PARENT_ID", nullable = true)
    public FileSubscribe getParent() {
        return parent;
    }

    public void setParent(FileSubscribe parent) {
        this.parent = parent;
    }

    @OneToMany(fetch = FetchType.LAZY, orphanRemoval = true, mappedBy = "parent")
    public Set<FileSubscribe> getChildSubscribes() {
        return childSubscribes;
    }

    public void setChildSubscribes(Set<FileSubscribe> childSubscribes) {
        this.childSubscribes = childSubscribes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "fileSubscribe")
    public Set<BusinessNeedFile> getBusinessNeedFiles() {
        return businessNeedFiles;
    }

    public void setBusinessNeedFiles(Set<BusinessNeedFile> businessNeedFiles) {
        this.businessNeedFiles = businessNeedFiles;
    }
}
