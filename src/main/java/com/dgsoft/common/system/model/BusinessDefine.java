package com.dgsoft.common.system.model;
// Generated Apr 28, 2013 11:02:59 AM by Hibernate Tools 4.0.0

import com.dgsoft.common.OrderModel;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.util.HashSet;
import java.util.Set;

/**
 * BusinessDefine generated by hbm2java
 */
@Entity
@Table(name = "BUSINESS_DEFINE",catalog = "DB_PLAT_SYSTEM")
public class BusinessDefine implements java.io.Serializable,OrderModel {

    private String id;
    private BusinessCategory businessCategory;
    private String name;
    private String wfName;
    private String startPage;
    private String memo;
    private Integer version;
    private String startPropagation;
    private String rolePrefix;
    private String description;
    private int priority;
    private Set<TaskSubscribe> taskSubscribes = new HashSet<TaskSubscribe>(0);
    private Set<BusinessNeedFile> businessNeedFiles = new HashSet<BusinessNeedFile>(0);
    private Set<SubscribeGroup> subscribeGroups = new HashSet<SubscribeGroup>(0);
    private Set<CreateComponent> businessCreateDataValids = new HashSet<CreateComponent>(0);
    private boolean enable;
    private String pickBusinessDefineId;
    private String modifyPage;

    private Set<Fee> fees = new HashSet<Fee>(0);




    public BusinessDefine() {
    }

    public BusinessDefine(String id, BusinessCategory businessCategory,
                          String name, String wfName) {
        this.id = id;
        this.businessCategory = businessCategory;
        this.name = name;
        this.wfName = wfName;
    }

    @Id
    @Column(name = "ID", unique = true, nullable = false, length = 32)
    @NotNull
    @Size(max = 32)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CATEGORY", nullable = false)
    @NotNull
    public BusinessCategory getBusinessCategory() {
        return this.businessCategory;
    }

    public void setBusinessCategory(BusinessCategory businessCategory) {
        this.businessCategory = businessCategory;
    }

    @Column(name = "NAME", nullable = false, length = 50)
    @NotNull
    @Size(max = 50)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "WF_NAME", nullable = false, length = 32)
    @NotNull
    @Size(max = 32)
    public String getWfName() {
        return this.wfName;
    }

    public void setWfName(String wfName) {
        this.wfName = wfName;
    }

    @Column(name = "START_PAGE", length = 200)
    @Size(max = 200)
    public String getStartPage() {
        return this.startPage;
    }

    public void setStartPage(String operPage) {
        this.startPage = operPage;
    }

    @Column(name = "MEMO", length = 200)
    @Size(max = 200)
    public String getMemo() {
        return this.memo;
    }

    public void setMemo(String memo) {
        this.memo = memo;
    }

    @OneToMany(fetch = FetchType.LAZY,orphanRemoval = true,cascade = CascadeType.ALL,mappedBy = "businessDefine")
    public Set<BusinessNeedFile> getBusinessNeedFiles() {
        return businessNeedFiles;
    }

    public void setBusinessNeedFiles(Set<BusinessNeedFile> businessNeedFiles) {
        this.businessNeedFiles = businessNeedFiles;
    }

    @Column(name = "START_PROPAGATION",nullable = true,length = 10)
    @Size(max = 10)
    public String getStartPropagation() {
        return startPropagation;
    }

    public void setStartPropagation(String startPropagation) {
        this.startPropagation = startPropagation;
    }

    @OneToMany(fetch = FetchType.LAZY,orphanRemoval = true,cascade = {CascadeType.ALL},mappedBy = "businessDefine")
    public Set<TaskSubscribe> getTaskSubscribes() {
        return taskSubscribes;
    }

    public void setTaskSubscribes(Set<TaskSubscribe> editSubscribes) {
        this.taskSubscribes = editSubscribes;
    }

    @OneToMany(fetch = FetchType.LAZY,orphanRemoval = true,cascade = {CascadeType.ALL},mappedBy = "businessDefine")
    public Set<SubscribeGroup> getSubscribeGroups() {
        return subscribeGroups;
    }

    public void setSubscribeGroups(Set<SubscribeGroup> subscribeGroups) {
        this.subscribeGroups = subscribeGroups;
    }

    @Version
    public Integer getVersion() {
        return version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @Column(name="DESCRIPTION",nullable = true,length = 500)
    @Size(max = 500)
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name="ROLE_PREFIX",nullable = true,length = 20)
    @Size(max = 20)
    public String getRolePrefix() {
        return rolePrefix;
    }

    public void setRolePrefix(String rolePrefix) {
        this.rolePrefix = rolePrefix;
    }

    @Column(name="ENABLE",nullable = false)
    public boolean isEnable() {
        return enable;
    }

    public void setEnable(boolean enable) {
        this.enable = enable;
    }

    @Override
    @Column(name = "PRIORITY",nullable = false)
    public int getPriority() {
        return this.priority;
    }

    @Override
    public void setPriority(int priority) {
        this.priority = priority;
    }


    @OneToMany(fetch = FetchType.LAZY,orphanRemoval = true,cascade = {CascadeType.ALL},mappedBy = "businessDefine")
    public Set<CreateComponent> getBusinessCreateDataValids() {
        return businessCreateDataValids;
    }

    public void setBusinessCreateDataValids(Set<CreateComponent> businessCreateDataValids) {
        this.businessCreateDataValids = businessCreateDataValids;
    }

    @Column(name = "PICK_BUSINESS_DEFINE_ID", nullable = true, length = 32)
    public String getPickBusinessDefineId() {
        return pickBusinessDefineId;
    }

    public void setPickBusinessDefineId(String pickBusinessDefineId) {
        this.pickBusinessDefineId = pickBusinessDefineId;
    }

    @Override
    public int hashCode() {
        return id.hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (!(obj instanceof BusinessDefine)) {
            return false;
        }
        return id.equals(((BusinessDefine) obj).getId());
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "BUSINESS_AND_FEE",joinColumns=@JoinColumn(name="BUSINESS"),inverseJoinColumns = @JoinColumn(name = "FEE"))
    public Set<Fee> getFees() {
        return fees;
    }

    public void setFees(Set<Fee> fees) {
        this.fees = fees;
    }

    @Column(name = "MODIFY_PAGE",nullable = true, length = 200)
    @Size(max = 200)
    public String getModifyPage() {
        return modifyPage;
    }

    public void setModifyPage(String modifyPage) {
        this.modifyPage = modifyPage;
    }
}
