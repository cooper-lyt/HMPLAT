package com.dgsoft.house.model;
// Generated Jul 12, 2013 11:32:23 AM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * ProjectSellCard generated by hbm2java
 */
@Entity
@Table(name = "PROJECT_SELL_CARD", catalog = "HOUSE_INFO")
public class ProjectSellCard implements java.io.Serializable {

	private String id;
	private Card card;
	private Integer houseCount;
	private Integer buildCount;
	private BigDecimal area;
	private Boolean prepareSell;
	private String useType;
	private String sellObject;
	private String yearNumber;
	private String orderNumber;
	private Set<Build> builds = new HashSet<Build>(0);

	public ProjectSellCard() {
	}

	public ProjectSellCard(String id, Card card) {
		this.id = id;
		this.card = card;
	}
	public ProjectSellCard(String id, Card card, Integer houseCount,
			Integer buildCount, BigDecimal area, Boolean prepareSell,
			String useType, String sellObject, String yearNumber,
			String orderNumber, Set<Build> builds) {
		this.id = id;
		this.card = card;
		this.houseCount = houseCount;
		this.buildCount = buildCount;
		this.area = area;
		this.prepareSell = prepareSell;
		this.useType = useType;
		this.sellObject = sellObject;
		this.yearNumber = yearNumber;
		this.orderNumber = orderNumber;
		this.builds = builds;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 32)
	@NotNull
	@Size(max = 32)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CARD_ID", nullable = false)
	@NotNull
	public Card getCard() {
		return this.card;
	}

	public void setCard(Card card) {
		this.card = card;
	}

	@Column(name = "HOUSE_COUNT")
	public Integer getHouseCount() {
		return this.houseCount;
	}

	public void setHouseCount(Integer houseCount) {
		this.houseCount = houseCount;
	}

	@Column(name = "BUILD_COUNT")
	public Integer getBuildCount() {
		return this.buildCount;
	}

	public void setBuildCount(Integer buildCount) {
		this.buildCount = buildCount;
	}

	@Column(name = "AREA", precision = 18, scale = 3)
	public BigDecimal getArea() {
		return this.area;
	}

	public void setArea(BigDecimal area) {
		this.area = area;
	}

	@Column(name = "PREPARE_SELL")
	public Boolean getPrepareSell() {
		return this.prepareSell;
	}

	public void setPrepareSell(Boolean prepareSell) {
		this.prepareSell = prepareSell;
	}

	@Column(name = "USE_TYPE", length = 32)
	@Size(max = 32)
	public String getUseType() {
		return this.useType;
	}

	public void setUseType(String useType) {
		this.useType = useType;
	}

	@Column(name = "SELL_OBJECT", length = 50)
	@Size(max = 50)
	public String getSellObject() {
		return this.sellObject;
	}

	public void setSellObject(String sellObject) {
		this.sellObject = sellObject;
	}

	@Column(name = "YEAR_NUMBER", length = 20)
	@Size(max = 20)
	public String getYearNumber() {
		return this.yearNumber;
	}

	public void setYearNumber(String yearNumber) {
		this.yearNumber = yearNumber;
	}

	@Column(name = "ORDER_NUMBER", length = 20)
	@Size(max = 20)
	public String getOrderNumber() {
		return this.orderNumber;
	}

	public void setOrderNumber(String orderNumber) {
		this.orderNumber = orderNumber;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projectSellCard")
	public Set<Build> getBuilds() {
		return this.builds;
	}

	public void setBuilds(Set<Build> builds) {
		this.builds = builds;
	}

}
