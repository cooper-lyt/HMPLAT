package com.dgsoft.house.model;
// Generated Jul 12, 2013 11:32:23 AM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * Developer generated by hbm2java
 */
@Entity
@Table(name = "DEVELOPER", catalog = "HOUSE_INFO")
public class Developer implements java.io.Serializable {

    private String id;
    private int version;
    private AttachCorporation attachCorporation;
    private String name;
    private Set<Demployee> demployees = new HashSet<Demployee>(0);
    private Set<Project> projects = new HashSet<Project>(0);
    private boolean destroyed;

    public Developer() {
        destroyed = false;
    }

    public Developer(AttachCorporation attachCorporation) {
        destroyed = false;
        this.attachCorporation = attachCorporation;
    }

    @Id
    @Column(name = "ID", unique = true, nullable = false, length = 32)
    @NotNull
    @Size(max = 32)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @Version
    @Column(name = "VERSION", nullable = false)
    public int getVersion() {
        return this.version;
    }

    public void setVersion(int version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY, cascade = {CascadeType.ALL})
    @JoinColumn(name = "ATTACH_ID", nullable = false)
    @NotNull
    public AttachCorporation getAttachCorporation() {
        return this.attachCorporation;
    }

    public void setAttachCorporation(AttachCorporation attachCorporation) {
        this.attachCorporation = attachCorporation;
    }

    @Column(name = "NAME", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "developer")
    public Set<Demployee> getDemployees() {
        return this.demployees;
    }

    public void setDemployees(Set<Demployee> demployees) {
        this.demployees = demployees;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "developer")
    public Set<Project> getProjects() {
        return this.projects;
    }

    public void setProjects(Set<Project> projects) {
        this.projects = projects;
    }

    @Column(name = "DESTROYED", nullable = false)
    public boolean isDestroyed() {
        return destroyed;
    }

    public void setDestroyed(boolean destroyed) {
        this.destroyed = destroyed;
    }
}
