package com.dgsoft.house.model;
// Generated Jul 12, 2013 11:32:23 AM by Hibernate Tools 4.0.0

import com.google.common.collect.Iterators;
import org.hibernate.annotations.GenericGenerator;

import java.util.*;
import javax.persistence.*;
import javax.swing.tree.TreeNode;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * District generated by hbm2java
 */
@Entity
@Table(name = "DISTRICT", catalog = "HOUSE_INFO")
public class District implements java.io.Serializable,TreeNode {

	private String id;
	private Integer version;
	private ProvinceCity provinceCity;
	private String name;
	private String shortName;
	private String memo;
	private Set<Section> sections = new HashSet<Section>(0);

	public District() {
	}

	public District(String id, ProvinceCity provinceCity) {
		this.id = id;
		this.provinceCity = provinceCity;
	}
	public District(String id, ProvinceCity provinceCity, String name,
			String shortName, String memo, Set<Section> sections) {
		this.id = id;
		this.provinceCity = provinceCity;
		this.name = name;
		this.shortName = shortName;
		this.memo = memo;
		this.sections = sections;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 32)
    @GeneratedValue(generator = "paymentableGenerator")
    @GenericGenerator(name = "paymentableGenerator",strategy = "uuid")
	@NotNull
	@Size(max = 32)

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PROVINCECITYID", nullable = false)
	@NotNull
	public ProvinceCity getProvinceCity() {
		return this.provinceCity;
	}

	public void setProvinceCity(ProvinceCity provinceCity) {
		this.provinceCity = provinceCity;
	}

	@Column(name = "NAME", length = 100,nullable = false)
	@Size(max = 100)
    @NotNull
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "SHORT_NAME", length = 50)
	@Size(max = 50)
	public String getShortName() {
		return this.shortName;
	}

	public void setShortName(String shortName) {
		this.shortName = shortName;
	}

	@Column(name = "MEMO", length = 200)
	@Size(max = 200)
	public String getMemo() {
		return this.memo;
	}

	public void setMemo(String memo) {
		this.memo = memo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "district")
	public Set<Section> getSections() {
		return this.sections;
	}

	public void setSections(Set<Section> sections) {
		this.sections = sections;
	}


    @Transient
    public List<Section> getSectionList(){
        return new ArrayList<Section>(getSections());
    }

    @Override
    @Transient
    public TreeNode getChildAt(int childIndex) {
        return getSectionList().get(childIndex);
    }

    @Override
    @Transient
    public int getChildCount() {
        return getSections().size();
    }

    @Override
    @Transient
    public TreeNode getParent() {
        return getProvinceCity();
    }

    @Override
    @Transient
    public int getIndex(TreeNode node) {
        return getSectionList().indexOf(node);
    }

    @Override
    @Transient
    public boolean getAllowsChildren() {
        return true;
    }

    @Override
    @Transient
    public boolean isLeaf() {
        return getSections().isEmpty();
    }

    @Override
    @Transient
    public Enumeration children() {
        return Iterators.asEnumeration(getSections().iterator());
    }

}
