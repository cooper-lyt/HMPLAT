package com.dgsoft.house.owner.model;
// Generated Aug 18, 2014 5:12:39 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * BusinessHouse generated by hbm2java
 */
@Entity
@Table(name = "BUSINESS_HOUSE", catalog = "HOUSE_OWNER_RECORD")
public class BusinessHouse implements java.io.Serializable {

	private String id;
	private Business business;
	private LandInfo landInfo;
	private Build build;
	private String houseOrder;
	private String houseUnitName;
	private String inFloorName;
	private BigDecimal houseArea;
	private BigDecimal prepareArea;
	private BigDecimal useArea;
	private BigDecimal commArea;
	private BigDecimal shineArea;
	private BigDecimal loftArea;
	private BigDecimal commParam;
	private int houseState;
	private String houseType;
	private String useType;
	private String structure;
	private String knotSize;
	private String address;
	private String eastWall;
	private String westWall;
	private String southWall;
	private String northWall;
	private Date mapTime;
	private String direction;
	private boolean initRegister;
	private boolean firmlyPower;
	private String houseCode;
	private Set<Evaluate> evaluates = new HashSet<Evaluate>(0);
	private Set<BusinessPool> businessPools = new HashSet<BusinessPool>(0);
	private Set<MortgaegeRegiste> mortgaegeRegistes = new HashSet<MortgaegeRegiste>(
			0);
	private Set<SaleInfo> saleInfos = new HashSet<SaleInfo>(0);
	private Set<HouseCloseCancel> houseCloseCancels = new HashSet<HouseCloseCancel>(
			0);
	private Set<NewHouseContract> newHouseContracts = new HashSet<NewHouseContract>(
			0);
	private Set<CloseHouse> closeHouses = new HashSet<CloseHouse>(0);

	public BusinessHouse() {
	}

	public BusinessHouse(String id, Business business, Build build,
			String houseOrder, String inFloorName, BigDecimal houseArea,
			int houseState, String useType, String structure, String address,
			Date mapTime, boolean initRegister, boolean firmlyPower,
			String houseCode) {
		this.id = id;
		this.business = business;
		this.build = build;
		this.houseOrder = houseOrder;
		this.inFloorName = inFloorName;
		this.houseArea = houseArea;
		this.houseState = houseState;
		this.useType = useType;
		this.structure = structure;
		this.address = address;
		this.mapTime = mapTime;
		this.initRegister = initRegister;
		this.firmlyPower = firmlyPower;
		this.houseCode = houseCode;
	}
	public BusinessHouse(String id, Business business, LandInfo landInfo,
			Build build, String houseOrder, String houseUnitName,
			String inFloorName, BigDecimal houseArea, BigDecimal prepareArea,
			BigDecimal useArea, BigDecimal commArea, BigDecimal shineArea,
			BigDecimal loftArea, BigDecimal commParam, int houseState,
			String houseType, String useType, String structure,
			String knotSize, String address, String eastWall, String westWall,
			String southWall, String northWall, Date mapTime, String direction,
			boolean initRegister, boolean firmlyPower, String houseCode,
			Set<Evaluate> evaluates, Set<BusinessPool> businessPools,
			Set<MortgaegeRegiste> mortgaegeRegistes, Set<SaleInfo> saleInfos,
			Set<HouseCloseCancel> houseCloseCancels,
			Set<NewHouseContract> newHouseContracts, Set<CloseHouse> closeHouses) {
		this.id = id;
		this.business = business;
		this.landInfo = landInfo;
		this.build = build;
		this.houseOrder = houseOrder;
		this.houseUnitName = houseUnitName;
		this.inFloorName = inFloorName;
		this.houseArea = houseArea;
		this.prepareArea = prepareArea;
		this.useArea = useArea;
		this.commArea = commArea;
		this.shineArea = shineArea;
		this.loftArea = loftArea;
		this.commParam = commParam;
		this.houseState = houseState;
		this.houseType = houseType;
		this.useType = useType;
		this.structure = structure;
		this.knotSize = knotSize;
		this.address = address;
		this.eastWall = eastWall;
		this.westWall = westWall;
		this.southWall = southWall;
		this.northWall = northWall;
		this.mapTime = mapTime;
		this.direction = direction;
		this.initRegister = initRegister;
		this.firmlyPower = firmlyPower;
		this.houseCode = houseCode;
		this.evaluates = evaluates;
		this.businessPools = businessPools;
		this.mortgaegeRegistes = mortgaegeRegistes;
		this.saleInfos = saleInfos;
		this.houseCloseCancels = houseCloseCancels;
		this.newHouseContracts = newHouseContracts;
		this.closeHouses = closeHouses;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 32)
	@NotNull
	@Size(max = 32)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BUSINESS_ID", nullable = false)
	@NotNull
	public Business getBusiness() {
		return this.business;
	}

	public void setBusiness(Business business) {
		this.business = business;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LAND_INFO")
	public LandInfo getLandInfo() {
		return this.landInfo;
	}

	public void setLandInfo(LandInfo landInfo) {
		this.landInfo = landInfo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BUILD_ID", nullable = false)
	@NotNull
	public Build getBuild() {
		return this.build;
	}

	public void setBuild(Build build) {
		this.build = build;
	}

	@Column(name = "HOUSE_ORDER", nullable = false, length = 20)
	@NotNull
	@Size(max = 20)
	public String getHouseOrder() {
		return this.houseOrder;
	}

	public void setHouseOrder(String houseOrder) {
		this.houseOrder = houseOrder;
	}

	@Column(name = "HOUSE_UNIT_NAME", length = 20)
	@Size(max = 20)
	public String getHouseUnitName() {
		return this.houseUnitName;
	}

	public void setHouseUnitName(String houseUnitName) {
		this.houseUnitName = houseUnitName;
	}

	@Column(name = "IN_FLOOR_NAME", nullable = false, length = 50)
	@NotNull
	@Size(max = 50)
	public String getInFloorName() {
		return this.inFloorName;
	}

	public void setInFloorName(String inFloorName) {
		this.inFloorName = inFloorName;
	}

	@Column(name = "HOUSE_AREA", nullable = false, precision = 18, scale = 3)
	@NotNull
	public BigDecimal getHouseArea() {
		return this.houseArea;
	}

	public void setHouseArea(BigDecimal houseArea) {
		this.houseArea = houseArea;
	}

	@Column(name = "PREPARE_AREA", precision = 18, scale = 3)
	public BigDecimal getPrepareArea() {
		return this.prepareArea;
	}

	public void setPrepareArea(BigDecimal prepareArea) {
		this.prepareArea = prepareArea;
	}

	@Column(name = "USE_AREA", precision = 18, scale = 3)
	public BigDecimal getUseArea() {
		return this.useArea;
	}

	public void setUseArea(BigDecimal useArea) {
		this.useArea = useArea;
	}

	@Column(name = "COMM_AREA", precision = 18, scale = 3)
	public BigDecimal getCommArea() {
		return this.commArea;
	}

	public void setCommArea(BigDecimal commArea) {
		this.commArea = commArea;
	}

	@Column(name = "SHINE_AREA", precision = 18, scale = 10)
	public BigDecimal getShineArea() {
		return this.shineArea;
	}

	public void setShineArea(BigDecimal shineArea) {
		this.shineArea = shineArea;
	}

	@Column(name = "LOFT_AREA", precision = 18, scale = 3)
	public BigDecimal getLoftArea() {
		return this.loftArea;
	}

	public void setLoftArea(BigDecimal loftArea) {
		this.loftArea = loftArea;
	}

	@Column(name = "COMM_PARAM", precision = 18, scale = 3)
	public BigDecimal getCommParam() {
		return this.commParam;
	}

	public void setCommParam(BigDecimal commParam) {
		this.commParam = commParam;
	}

	@Column(name = "HOUSE_STATE", nullable = false)
	public int getHouseState() {
		return this.houseState;
	}

	public void setHouseState(int houseState) {
		this.houseState = houseState;
	}

	@Column(name = "HOUSE_TYPE", length = 32)
	@Size(max = 32)
	public String getHouseType() {
		return this.houseType;
	}

	public void setHouseType(String houseType) {
		this.houseType = houseType;
	}

	@Column(name = "USE_TYPE", nullable = false, length = 32)
	@NotNull
	@Size(max = 32)
	public String getUseType() {
		return this.useType;
	}

	public void setUseType(String useType) {
		this.useType = useType;
	}

	@Column(name = "STRUCTURE", nullable = false, length = 32)
	@NotNull
	@Size(max = 32)
	public String getStructure() {
		return this.structure;
	}

	public void setStructure(String structure) {
		this.structure = structure;
	}

	@Column(name = "KNOT_SIZE", length = 32)
	@Size(max = 32)
	public String getKnotSize() {
		return this.knotSize;
	}

	public void setKnotSize(String knotSize) {
		this.knotSize = knotSize;
	}

	@Column(name = "ADDRESS", nullable = false, length = 200)
	@NotNull
	@Size(max = 200)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "EAST_WALL", length = 32)
	@Size(max = 32)
	public String getEastWall() {
		return this.eastWall;
	}

	public void setEastWall(String eastWall) {
		this.eastWall = eastWall;
	}

	@Column(name = "WEST_WALL", length = 32)
	@Size(max = 32)
	public String getWestWall() {
		return this.westWall;
	}

	public void setWestWall(String westWall) {
		this.westWall = westWall;
	}

	@Column(name = "SOUTH_WALL", length = 32)
	@Size(max = 32)
	public String getSouthWall() {
		return this.southWall;
	}

	public void setSouthWall(String southWall) {
		this.southWall = southWall;
	}

	@Column(name = "NORTH_WALL", length = 32)
	@Size(max = 32)
	public String getNorthWall() {
		return this.northWall;
	}

	public void setNorthWall(String northWall) {
		this.northWall = northWall;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MAP_TIME", nullable = false, length = 19)
	@NotNull
	public Date getMapTime() {
		return this.mapTime;
	}

	public void setMapTime(Date mapTime) {
		this.mapTime = mapTime;
	}

	@Column(name = "DIRECTION", length = 32)
	@Size(max = 32)
	public String getDirection() {
		return this.direction;
	}

	public void setDirection(String direction) {
		this.direction = direction;
	}

	@Column(name = "INIT_REGISTER", nullable = false)
	public boolean isInitRegister() {
		return this.initRegister;
	}

	public void setInitRegister(boolean initRegister) {
		this.initRegister = initRegister;
	}

	@Column(name = "FIRMLY_POWER", nullable = false)
	public boolean isFirmlyPower() {
		return this.firmlyPower;
	}

	public void setFirmlyPower(boolean firmlyPower) {
		this.firmlyPower = firmlyPower;
	}

	@Column(name = "HOUSE_CODE", nullable = false, length = 32)
	@NotNull
	@Size(max = 32)
	public String getHouseCode() {
		return this.houseCode;
	}

	public void setHouseCode(String houseCode) {
		this.houseCode = houseCode;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "businessHouse")
	public Set<Evaluate> getEvaluates() {
		return this.evaluates;
	}

	public void setEvaluates(Set<Evaluate> evaluates) {
		this.evaluates = evaluates;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "businessHouse")
	public Set<BusinessPool> getBusinessPools() {
		return this.businessPools;
	}

	public void setBusinessPools(Set<BusinessPool> businessPools) {
		this.businessPools = businessPools;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "businessHouse")
	public Set<MortgaegeRegiste> getMortgaegeRegistes() {
		return this.mortgaegeRegistes;
	}

	public void setMortgaegeRegistes(Set<MortgaegeRegiste> mortgaegeRegistes) {
		this.mortgaegeRegistes = mortgaegeRegistes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "businessHouse")
	public Set<SaleInfo> getSaleInfos() {
		return this.saleInfos;
	}

	public void setSaleInfos(Set<SaleInfo> saleInfos) {
		this.saleInfos = saleInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "businessHouse")
	public Set<HouseCloseCancel> getHouseCloseCancels() {
		return this.houseCloseCancels;
	}

	public void setHouseCloseCancels(Set<HouseCloseCancel> houseCloseCancels) {
		this.houseCloseCancels = houseCloseCancels;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "businessHouse")
	public Set<NewHouseContract> getNewHouseContracts() {
		return this.newHouseContracts;
	}

	public void setNewHouseContracts(Set<NewHouseContract> newHouseContracts) {
		this.newHouseContracts = newHouseContracts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "businessHouse")
	public Set<CloseHouse> getCloseHouses() {
		return this.closeHouses;
	}

	public void setCloseHouses(Set<CloseHouse> closeHouses) {
		this.closeHouses = closeHouses;
	}

}
