package com.dgsoft.house.owner.model;
// Generated Oct 11, 2014 3:13:15 PM by Hibernate Tools 4.0.0

import com.dgsoft.common.OrderBeanComparator;
import org.hibernate.annotations.GenericGenerator;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.util.*;

/**
 * RecordStore generated by hbm2java
 */
@Entity
@Table(name = "RECORD_STORE", catalog = "HOUSE_OWNER_RECORD")
public class RecordStore implements java.io.Serializable {

    private String id;

    private OwnerBusiness ownerBusiness;

    private String recordCode;
    private RecordFrame recordFrame;
    private String cabinet;
    private String box;


    private Long version;

    private Date createTime;


    private Set<BusinessFile> businessFiles = new HashSet<BusinessFile>();

    public RecordStore() {
    }

    public RecordStore(OwnerBusiness ownerBusiness) {
        this.ownerBusiness = ownerBusiness;
        this.createTime = new Date();
    }

    @Id
    @Column(name = "ID", unique = true, nullable = false, length = 32)
    @NotNull
    @Size(max = 32)
    @GeneratedValue(generator = "system-uuid")
    @GenericGenerator(name = "system-uuid", strategy = "uuid.hex")
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }


    @Column(name = "RECORD_CODE", nullable = false, length = 50)
    @NotNull
    @Size(max = 50)
    public String getRecordCode() {
        return recordCode;
    }

    public void setRecordCode(String recordCode) {
        this.recordCode = recordCode;
    }


    @ManyToOne(fetch = FetchType.LAZY,optional = false)
    @JoinColumn(name = "BUSINESS",nullable = false)
    @NotNull
    public OwnerBusiness getOwnerBusiness() {
        return ownerBusiness;
    }

    public void setOwnerBusiness(OwnerBusiness ownerBusiness) {
        this.ownerBusiness = ownerBusiness;
    }


    @Version
    @Column(name = "VERSION" , nullable = true)
    public Long getVersion() {
        return version;
    }

    public void setVersion(Long version) {
        this.version = version;
    }


    @OneToMany(fetch = FetchType.LAZY,cascade = CascadeType.ALL,mappedBy = "recordStore")
    public Set<BusinessFile> getBusinessFiles() {
        return businessFiles;
    }

    public void setBusinessFiles(Set<BusinessFile> businessFiles) {
        this.businessFiles = businessFiles;
    }


    @Transient
    public List<BusinessFile> getBusinessShowFileList(){
        List<BusinessFile> result = new ArrayList<BusinessFile>();
        for(BusinessFile file: getBusinessFiles()){
            if (file.isNoFile() || file.getUploadFiles().size() > 0){
                result.add(file);
            }
        }

        Collections.sort(result, OrderBeanComparator.getInstance());
        return result;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATE_TIME", nullable = true, length = 19)
    public Date getCreateTime() {
        return createTime;
    }

    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }


    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "FRAME", nullable = false)
    @NotNull
    public RecordFrame getRecordFrame() {
        return recordFrame;
    }

    public void setRecordFrame(RecordFrame recordFrame) {
        this.recordFrame = recordFrame;
    }

    @Column(name="CABINET",length = 32,nullable = false)
    @NotNull
    public String getCabinet() {
        return cabinet;
    }

    public void setCabinet(String cabinet) {
        this.cabinet = cabinet;
    }

    @Column(name = "BOX",length = 32,nullable = false)
    @NotNull
    public String getBox() {
        return box;
    }

    public void setBox(String box) {
        this.box = box;
    }

}
