SET SESSION FOREIGN_KEY_CHECKS=0;

/* Drop Tables */

DROP TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE_MONEY;
DROP TABLE HOUSE_OWNER_RECORD.HOUSE_POOL;
DROP TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE;
DROP TABLE HOUSE_OWNER_RECORD.BUSINESS_PERSION;
DROP TABLE HOUSE_OWNER_RECORD.BUSINESS_POOL;
DROP TABLE HOUSE_OWNER_RECORD.SALE_INFO;
DROP TABLE HOUSE_OWNER_RECORD.NEW_HOUSE_CONTRACT;
DROP TABLE HOUSE_OWNER_RECORD.PROJECT_BUSINESS;
DROP TABLE HOUSE_OWNER_RECORD.PROJECT_HISTORY;
DROP TABLE HOUSE_OWNER_RECORD.LAND_INFO;
DROP TABLE HOUSE_OWNER_RECORD.CLOSE_HOUSE;
DROP TABLE HOUSE_OWNER_RECORD.MORTGAEGE_REGISTE;
DROP TABLE HOUSE_OWNER_RECORD.CARD;
DROP TABLE HOUSE_OWNER_RECORD.FIRST_REGISTE;
DROP TABLE HOUSE_OWNER_RECORD.HOUSE_CLOSE_CANCEL;
DROP TABLE HOUSE_OWNER_RECORD.REASON;
DROP TABLE HOUSE_OWNER_RECORD.CHANGE_REGISTE;
DROP TABLE HOUSE_OWNER_RECORD.HOUSE_BUSINESS;
DROP TABLE HOUSE_OWNER_RECORD.OTHER_REGISTE;
DROP TABLE HOUSE_OWNER_RECORD.BUSINESS;




/* Create Tables */

CREATE TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE_MONEY
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	MONEY_TYPE_ID VARCHAR(20) COMMENT '收费项目',
	SHOULD_MONEY DECIMAL(18,3) COMMENT '应收金额',
	FACT_MONEY DECIMAL(18,3) COMMENT '实收金额',
	CHARGE_DETAILS VARCHAR(200) COMMENT '收费细节',
	MEMO VARCHAR(200) COMMENT 'MEMO',
	-- 倒库导入原库的NO
	BUSINESS VARCHAR(32) NOT NULL COMMENT 'BUSINESS',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '收费表' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	BUILD_NO VARCHAR(32) NOT NULL COMMENT '楼号',
	HOUSE_NUMBER VARCHAR(50) COMMENT '房屋编号',
	HOUSE_ORDER VARCHAR(20) NOT NULL COMMENT '房号',
	HOUSE_UNIT_NAME VARCHAR(20) COMMENT '单元名',
	IN_FLOOR_NAME VARCHAR(50) COMMENT '所在层名称',
	HOUSE_AREA DECIMAL(18,3) NOT NULL COMMENT '建筑面积',
	PREPARE_AREA DECIMAL(18,3) COMMENT '预测面积',
	TEMP_AREA DECIMAL(18,3) COMMENT '备案面积',
	USE_AREA DECIMAL(18,3) COMMENT '使用面积',
	COMM_AREA DECIMAL(18,3) COMMENT '分摊面积',
	SHINE_AREA DECIMAL(18,10) COMMENT '阳台面积',
	LOFT_AREA DECIMAL(18,3) COMMENT '阁楼面积',
	COMM_PARAM DECIMAL(18,3) COMMENT '分摊系数',
	PRIVATE_AREA DECIMAL(18,3) COMMENT '私有面积',
	HOUSE_STATE INT NOT NULL COMMENT '房屋状态',
	DOOR_NO VARCHAR(20) COMMENT '门牌号',
	HOUSE_TYPE VARCHAR(32) COMMENT '房屋类型',
	USE_TYPE VARCHAR(32) COMMENT '设计用途',
	HOUSE_PORPERTY VARCHAR(32) COMMENT '产别',
	STRUCTURE VARCHAR(32) COMMENT '结构',
	KNOT_SIZE VARCHAR(32) COMMENT '套型',
	HOUSE_FROM VARCHAR(32) COMMENT '房屋来源',
	HOUSE_STATION VARCHAR(200) COMMENT '房屋坐落',
	LAND_INFO VARCHAR(32) COMMENT '土地',
	EAST_WALL VARCHAR(32) COMMENT '东墙',
	WEST_WALL VARCHAR(32) COMMENT '西墙',
	SOUTH_WALL VARCHAR(32) COMMENT '南墙',
	NORTH_WALL VARCHAR(32) COMMENT '北墙',
	MAP_TIME TIMESTAMP COMMENT '测绘时间',
	DIRECTION VARCHAR(32) COMMENT '朝向',
	INIT_REGISTER BOOLEAN NOT NULL COMMENT '初始登记',
	FIRMLY_POWER BOOLEAN NOT NULL COMMENT '是否确权',
	OUT_PLAN BOOLEAN NOT NULL COMMENT '超规划',
	SUM_PRICE DECIMAL(18,3) COMMENT '购房款',
	PAY_TYPE VARCHAR(32) COMMENT '购买方式',
	OWNER_NAME VARCHAR(32) COMMENT '产权人',
	ID_NO VARCHAR(100) COMMENT '证件号',
	ID_TYPE VARCHAR(32) COMMENT '证件类型',
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT 'BUSINESS_ID',
	TYPE VARCHAR(10) COMMENT 'TYPE',
	PROJECT_ID VARCHAR(32) NOT NULL COMMENT 'PROJECT_ID',
	LAND_ID VARCHAR(32) NOT NULL COMMENT 'LAND_ID',
	CONSTRAINT PK_HOUSE PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '房屋表' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.BUSINESS_PERSION
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	ID_NO VARCHAR(100) NOT NULL COMMENT '证件号',
	ID_TYPE VARCHAR(32) NOT NULL COMMENT '证件类型',
	NAME VARCHAR(50) NOT NULL COMMENT '姓名',
	TYPE VARCHAR(10) NOT NULL COMMENT '类型',
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT 'BUSINESS_ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '业务相关人' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.BUSINESS_POOL
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	-- 原共有权人，现共有权人，备案共有权人
	TYPE VARCHAR(10) NOT NULL COMMENT '共有权人类型',
	NAME VARCHAR(50) NOT NULL COMMENT '姓名',
	ID_TYPE VARCHAR(32) NOT NULL COMMENT '证件类型',
	ID_NO VARCHAR(100) NOT NULL COMMENT '证件号',
	RELATION VARCHAR(32) NOT NULL COMMENT '共有关系',
	POOL_AREA DECIMAL(19,4) NOT NULL COMMENT '共有面积',
	PERC VARCHAR(10) NOT NULL COMMENT '所占份额',
	MEMO VARCHAR(100) COMMENT '备注',
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT 'BUSINESS_ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '共有人' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.SALE_INFO
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	PAY_TYPE VARCHAR(32) COMMENT '付款方式',
	SUM_PRICE DECIMAL(19,4) NOT NULL COMMENT '购房款',
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT 'BUSINESS_ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '房屋交易信息' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.NEW_HOUSE_CONTRACT
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	POOL_MEMO VARCHAR(32) NOT NULL COMMENT '共有情况',
	HOUSE_PORPERTY VARCHAR(32) NOT NULL COMMENT '产别',
	HOUSE_FROM VARCHAR(32) NOT NULL COMMENT '房屋来源',
	COMPACT_NO VARCHAR(30) NOT NULL COMMENT '商品房合同备案号',
	SIGN_DATE DATETIME NOT NULL COMMENT '签约时间',
	RECORD_DATE DATETIME NOT NULL COMMENT '备案时间',
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT 'BUSINESS_ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '商品房合同备案' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.LAND_INFO
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	LAND_CARD_NO VARCHAR(50) COMMENT '土地证号',
	NUMBER VARCHAR(50) COMMENT '地号',
	LAND_PROPERTY VARCHAR(32) COMMENT '土地性质',
	BEGIN_USE_TIME TIMESTAMP COMMENT '土地使用年限始',
	END_USE_TIME TIMESTAMP COMMENT '土地使用年限止',
	AREA DECIMAL(18,3) COMMENT '面积',
	LAND_GET_MODE VARCHAR(32) COMMENT '取得方式',
	MEMO VARCHAR(200) COMMENT '备注',
	CONSTRAINT PK_LANDINFO PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '土地信息表' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.CLOSE_HOUSE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	CLOSE_DOWN_CLOUR VARCHAR(32) NOT NULL COMMENT '查封法院',
	ACTION VARCHAR(100) COMMENT '执行事项',
	CLOSE_DATE DATETIME NOT NULL COMMENT '查封时间',
	TO_DATE DATETIME COMMENT '查封期限',
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT 'BUSINESS_ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '查封' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.HOUSE_POOL
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	NAME VARCHAR(50) NOT NULL COMMENT '姓名',
	ID_TYPE VARCHAR(32) NOT NULL COMMENT '证件类型',
	ID_NO VARCHAR(100) NOT NULL COMMENT '证件号',
	RELATION VARCHAR(32) NOT NULL COMMENT '共有关系',
	POOL_AREA DECIMAL(19,4) NOT NULL COMMENT '共有面积',
	PERC VARCHAR(10) NOT NULL COMMENT '所占份额',
	MEMO VARCHAR(100) COMMENT '备注',
	HOUSE_ID VARCHAR(32) NOT NULL COMMENT 'HOUSE_ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '共有人' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.MORTGAEGE_REGISTE
(
	EVALUATE_CORP_NAME VARCHAR(60) COMMENT '评估机构名称',
	EVALUATE_CORP_N0 VARCHAR(32) COMMENT '评估公司编号',
	ASSESSMENT_PRICE DECIMAL(19,4) NOT NULL COMMENT '评估价格',
	HIGHEST_MOUNT_MONEY DECIMAL(19,4) NOT NULL COMMENT '债权数额',
	WARRANT_SCOPE VARCHAR(100) NOT NULL COMMENT '担保范围',
	INTEREST_TYPE VARCHAR(32) NOT NULL COMMENT '权利种类',
	MORTGAGE_DUE_TIME_S DATETIME NOT NULL COMMENT '抵押时间始',
	MORTGAGE_DUE_TIME_E DATETIME NOT NULL COMMENT '抵押时间止',
	MORTGAGE_AREA DECIMAL(19,4) NOT NULL COMMENT '抵押面积',
	DEPT_SURE_FACT VARCHAR(200) COMMENT '最高债权确定事实',
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT 'BUSINESS_ID'
) ENGINE = InnoDB COMMENT = '抵押登记' DEFAULT CHARACTER SET utf8;


-- 记录业务关联时，权证号，和同同，法律文件号，等相关证件的正价编号
CREATE TABLE HOUSE_OWNER_RECORD.CARD
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	TYPE VARCHAR(10) NOT NULL COMMENT 'TYPE',
	NUMBER VARCHAR(100) NOT NULL COMMENT 'NUMBER',
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT 'BUSINESS_ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '业务证书号' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.FIRST_REGISTE
(
	MAPPING_COR_NAME VARCHAR(60) NOT NULL COMMENT '测绘机构名称',
	MAPPING_COR_NO VARCHAR(32) NOT NULL COMMENT '测绘机构编号',
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT 'BUSINESS_ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '初始登记' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.HOUSE_CLOSE_CANCEL
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	CANCEL_DATE DATETIME NOT NULL COMMENT '解封时间',
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT 'BUSINESS_ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '解封登记' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.BUSINESS
(
	-- 倒库导入原库的NO
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	-- 倒库导入原库的NO
	BEFORE_BUSINESS_ID VARCHAR(32) COMMENT '启动业务ID',
	SOURCE INT NOT NULL COMMENT '业务来源',
	RECORD_TIME TIMESTAMP NOT NULL COMMENT '归档时间',
	ADD_BIZ_TIME TIMESTAMP COMMENT '补录时间',
	PROCESS_MESSAGE VARCHAR(400) COMMENT '流程提示',
	ENABLE BOOLEAN NOT NULL COMMENT '是否有效',
	MAPPING_COMPANY VARCHAR(32) COMMENT '测绘机构',
	EVALUATE_COMPANY VARCHAR(32) COMMENT '评估机构',
	MEMO VARCHAR(200) COMMENT '业务备注',
	VERSION INT COMMENT 'VERSION',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '业务' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.PROJECT_HISTORY
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	PROJECT_NO VARCHAR(32) NOT NULL COMMENT '项目编号',
	SECTION_NAME VARCHAR(100) NOT NULL COMMENT '小区名称',
	SECTION_NO VARCHAR(32) NOT NULL COMMENT '小区编号',
	DISTRICT_NO VARCHAR(32) NOT NULL COMMENT '行政区编号',
	LAND_ID VARCHAR(32) NOT NULL COMMENT 'LAND_ID',
	PROJECT_NAME VARCHAR(32) COMMENT '⁮项目名称',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = 'PROJECT_HISTORY' DEFAULT CHARACTER SET utf8;


-- 记录注销原因，更正前，更正后，变更前，变更后等事由信息
CREATE TABLE HOUSE_OWNER_RECORD.REASON
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	TYPE VARCHAR(10) NOT NULL COMMENT '事由类型',
	REASON VARCHAR(200) NOT NULL COMMENT '事由',
	-- 倒库导入原库的NO
	BUISINESS_ID VARCHAR(32) NOT NULL COMMENT 'BUISINESS_ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '事由表' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.PROJECT_BUSINESS
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT 'BUSINESS_ID',
	PROJECT_ID VARCHAR(32) NOT NULL COMMENT 'PROJECT_ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = 'PROJECT_BUSINESS' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.HOUSE_BUSINESS
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT 'BUSINESS_ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = 'HOUSE_BUSINESS' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.CHANGE_REGISTE
(
	EVALUATE_CORP_NAME VARCHAR(60) COMMENT '评估机构名称',
	EVALUATE_CORP_N0 VARCHAR(32) COMMENT '评估公司编号',
	ASSESSMENT_PRICE DECIMAL(19,4) NOT NULL COMMENT '评估价格',
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT 'BUSINESS_ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '转移登记' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.OTHER_REGISTE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT 'BUSINESS_ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '其它登记' DEFAULT CHARACTER SET utf8;



/* Create Foreign Keys */

ALTER TABLE HOUSE_OWNER_RECORD.HOUSE_POOL
	ADD FOREIGN KEY (HOUSE_ID)
	REFERENCES HOUSE_OWNER_RECORD.BUSINESS_HOUSE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE
	ADD FOREIGN KEY (LAND_ID)
	REFERENCES HOUSE_OWNER_RECORD.LAND_INFO (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.PROJECT_HISTORY
	ADD FOREIGN KEY (LAND_ID)
	REFERENCES HOUSE_OWNER_RECORD.LAND_INFO (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.REASON
	ADD FOREIGN KEY (BUISINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS
	ADD FOREIGN KEY (BEFORE_BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.PROJECT_BUSINESS
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.HOUSE_BUSINESS
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.OTHER_REGISTE
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_PERSION
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.CARD
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE_MONEY
	ADD FOREIGN KEY (BUSINESS)
	REFERENCES HOUSE_OWNER_RECORD.BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE
	ADD FOREIGN KEY (PROJECT_ID)
	REFERENCES HOUSE_OWNER_RECORD.PROJECT_HISTORY (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.PROJECT_BUSINESS
	ADD FOREIGN KEY (PROJECT_ID)
	REFERENCES HOUSE_OWNER_RECORD.PROJECT_HISTORY (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.NEW_HOUSE_CONTRACT
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.MORTGAEGE_REGISTE
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.CHANGE_REGISTE
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.CLOSE_HOUSE
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.FIRST_REGISTE
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.HOUSE_CLOSE_CANCEL
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.SALE_INFO
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_POOL
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



