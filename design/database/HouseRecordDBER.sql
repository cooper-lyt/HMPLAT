SET SESSION FOREIGN_KEY_CHECKS=0;

/* Drop Tables */

DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.RECORD_STORE;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.NEW_HOUSE_CONTRACT;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.BUSINESS_HOUSE;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.BUILD;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.BUSINESS_EMP;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.UPLOAD_FILE;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.BUSINESS_FILE;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.BUSINESS_MONEY;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.HOUSE_RECORD;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.HOUSE_STATE;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.OTHER_POWER_CARD_AND_HOUSE;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.HOUSE;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.BUSINESS_OWNER;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.BUSINESS_PERSION;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.BUSINESS_POOL;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.CARD;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.OTHER_POWER_CARD;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.CARD_INFO;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.CLOSE_HOUSE;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.EVALUATE;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.FINANCIAL;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.HOUSE_CLOSE_CANCEL;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.HOUSE_REG_INFO;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.LAND_INFO;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.LOCKED_HOUSE;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.MAKE_CARD;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.MAPPING_CORP;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.MORTGAEGE_REGISTE;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.NUMBER_POOL;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.REASON;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.TASK_OPER;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.PROJECT_RECORD_STORE;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.PROJECT_RECORD;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.PROJECT_SELL_CARD;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.PROJECT;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.SALE_INFO;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.PROCESS_MESSAGES;
DROP TABLE IF EXISTS HOUSE_OWNER_RECORD.OWNER_BUSINESS;




/* Create Tables */

CREATE TABLE HOUSE_OWNER_RECORD.BUILD
(
	ID VARCHAR(32) NOT NULL,
	MAP_NUMBER VARCHAR(4),
	BLOCK_NO VARCHAR(10) NOT NULL,
	BUILD_NO VARCHAR(4) NOT NULL,
	BUILD_CODE VARCHAR(32) NOT NULL,
	STREET_CODE VARCHAR(4),
	NAME VARCHAR(100) NOT NULL,
	DOOR_NO VARCHAR(32),
	UNINT_COUNT INT,
	FLOOR_COUNT INT NOT NULL,
	UP_FLOOR_COUNT INT NOT NULL,
	DOWN_FLOOR_COUNT INT NOT NULL,
	ADDRESS VARCHAR(50),
	HOUSE_COUNT INT,
	AREA DECIMAL(18,3),
	LNG DECIMAL(18,14),
	LAT DECIMAL(18,14),
	BUILD_TYPE VARCHAR(32),
	STRUCTURE VARCHAR(32) NOT NULL,
	HOME_COUNT INT,
	HOME_AREA DECIMAL(18,3),
	UNHOME_COUNT INT,
	UNHOME_AREA DECIMAL(18,3),
	SHOP_COUNT INT,
	SHOP_AREA DECIMAL(18,3),
	PROJECT VARCHAR(32) NOT NULL,
	COMPLETE_DATE VARCHAR(6),
	BUILD_DEVELOPER_NUMBER VARCHAR(20),
	CONSTRAINT PK_BUILD PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.BUSINESS_EMP
(
	ID VARCHAR(32) NOT NULL,
	TYPE VARCHAR(20) NOT NULL,
	EMP_CODE VARCHAR(32) NOT NULL,
	EMP_NAME VARCHAR(50) NOT NULL,
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.BUSINESS_FILE
(
	ID VARCHAR(32) NOT NULL,
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	NAME VARCHAR(100) NOT NULL,
	IMPORTANT_CODE VARCHAR(32),
	NO_FILE BOOLEAN NOT NULL,
	IMPORTANT BOOLEAN NOT NULL,
	MEMO VARCHAR(200),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE
(
	ID VARCHAR(32) NOT NULL,
	BUILD_ID VARCHAR(32),
	HOUSE_CODE VARCHAR(32) NOT NULL,
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	START_HOUSE VARCHAR(32) NOT NULL,
	AFTER_HOUSE VARCHAR(32),
	LAND_INFO VARCHAR(32),
	HOUSE_OWNER VARCHAR(32),
	REG_INFO VARCHAR(32),
	CONSTRAINT PK_HOUSE PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.BUSINESS_MONEY
(
	ID VARCHAR(32) NOT NULL,
	MONEY_TYPE_ID VARCHAR(20) NOT NULL,
	SHOULD_MONEY DECIMAL(18,3),
	FACT_MONEY DECIMAL(18,3),
	CHARGE_DETAILS VARCHAR(200),
	MEMO VARCHAR(200),
	-- 倒库导入原库的NO
	BUSINESS VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.BUSINESS_OWNER
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	ID_TYPE VARCHAR(32) NOT NULL,
	ID_NO VARCHAR(100) NOT NULL,
	PHONE VARCHAR(15) NOT NULL,
	ROOT_ADDRESS VARCHAR(50),
	CARD VARCHAR(32),
	LEGAL_PERSON VARCHAR(50),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.BUSINESS_PERSION
(
	ID VARCHAR(32) NOT NULL,
	ID_NO VARCHAR(100) NOT NULL,
	ID_TYPE VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	TYPE VARCHAR(20) NOT NULL,
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	PHONE VARCHAR(15),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.BUSINESS_POOL
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	ID_TYPE VARCHAR(32) NOT NULL,
	ID_NO VARCHAR(100) NOT NULL,
	RELATION VARCHAR(32),
	POOL_AREA DECIMAL(19,4),
	PERC VARCHAR(10),
	PHONE VARCHAR(15),
	CARD VARCHAR(32),
	CREATE_TIME TIMESTAMP NOT NULL,
	MEMO VARCHAR(200),
	BUSINESS_ID VARCHAR(32) NOT NULL,
	ROOT_ADDRESS VARCHAR(50),
	LEGAL_PERSON VARCHAR(50),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


-- 记录业务关联时，权证号，和同同，法律文件号，等相关证件的正价编号
CREATE TABLE HOUSE_OWNER_RECORD.CARD
(
	ID VARCHAR(32) NOT NULL,
	TYPE VARCHAR(20) NOT NULL,
	NUMBER VARCHAR(100) NOT NULL,
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '记录业务关联时，权证号，和同同，法律文件号，等相关证件的正价编号' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.CARD_INFO
(
	CODE VARCHAR(100),
	MEMO VARCHAR(200),
	MAKE_EMP_CODE VARCHAR(32) NOT NULL,
	MAKE_EMP_NAME VARCHAR(50) NOT NULL,
	PRINT_TIME TIMESTAMP,
	ID VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.CLOSE_HOUSE
(
	ID VARCHAR(32) NOT NULL,
	CLOSE_DOWN_CLOUR VARCHAR(32) NOT NULL,
	ACTION VARCHAR(100),
	CLOSE_DATE DATETIME NOT NULL,
	TO_DATE DATETIME,
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	-- 裁定书、判决书或其它生效的法律文书
	LEGAL_DOCUMENTS VARCHAR(50) COMMENT '裁定书、判决书或其它生效的法律文书',
	EXECUTION_NOTICE VARCHAR(50),
	SEND_PEOPLE VARCHAR(10),
	PHONE VARCHAR(15),
	EXECUTION_CARD_NO VARCHAR(30),
	WORK_CARD_NO VARCHAR(30),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.EVALUATE
(
	EVALUATE_CORP_NAME VARCHAR(60),
	EVALUATE_CORP_N0 VARCHAR(32),
	ASSESSMENT_PRICE DECIMAL(19,4) NOT NULL,
	ID VARCHAR(32) NOT NULL,
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.FINANCIAL
(
	ID VARCHAR(32) NOT NULL,
	-- 原产权人 V:NOW 
	-- 现产权人 V:NEW E:NEW
	-- 产权人 V:NOW E:NOW
	-- 抵押人 V:NOW
	-- 备案人 V:NOW
	-- 预告人 V:NOW
	TYPE VARCHAR(20) NOT NULL COMMENT '原产权人 V:NOW 
现产权人 V:NEW E:NEW
产权人 V:NOW E:NOW
抵押人 V:NOW
备案人 V:NOW
预告人 V:NOW',
	NAME VARCHAR(120) NOT NULL,
	CODE VARCHAR(100),
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	PHONE VARCHAR(15),
	-- 个人
	-- 机构
	FINANCIAL_TYPE VARCHAR(20) NOT NULL COMMENT '个人
机构',
	ID_TYPE VARCHAR(32),
	BANK VARCHAR(32),
	CREATE_TIME TIMESTAMP NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.HOUSE
(
	ID VARCHAR(32) NOT NULL,
	HOUSE_ORDER VARCHAR(20) NOT NULL,
	HOUSE_UNIT_NAME VARCHAR(20),
	IN_FLOOR_NAME VARCHAR(50) NOT NULL,
	HOUSE_AREA DECIMAL(18,3) NOT NULL,
	USE_AREA DECIMAL(18,3),
	COMM_AREA DECIMAL(18,3),
	SHINE_AREA DECIMAL(18,10),
	LOFT_AREA DECIMAL(18,3),
	COMM_PARAM DECIMAL(18,3),
	HOUSE_TYPE VARCHAR(32),
	USE_TYPE VARCHAR(32) NOT NULL,
	STRUCTURE VARCHAR(32) NOT NULL,
	KNOT_SIZE VARCHAR(32),
	ADDRESS VARCHAR(200) NOT NULL,
	EAST_WALL VARCHAR(32),
	WEST_WALL VARCHAR(32),
	SOUTH_WALL VARCHAR(32),
	NORTH_WALL VARCHAR(32),
	MAP_TIME TIMESTAMP,
	DIRECTION VARCHAR(32),
	HOUSE_CODE VARCHAR(32) NOT NULL,
	HAVE_DOWN_ROOM BOOLEAN NOT NULL,
	BUILD_CODE VARCHAR(32) NOT NULL,
	MAP_NUMBER VARCHAR(4),
	BLOCK_NO VARCHAR(10) NOT NULL,
	BUILD_NO VARCHAR(4) NOT NULL,
	STREET_CODE VARCHAR(4),
	DOOR_NO VARCHAR(32),
	UP_FLOOR_COUNT INT NOT NULL,
	FLOOR_COUNT INT NOT NULL,
	DOWN_FLOOR_COUNT INT NOT NULL,
	BUILD_TYPE VARCHAR(32),
	PROJECT_CODE VARCHAR(32) NOT NULL,
	PROJECT_NAME VARCHAR(50) NOT NULL,
	BUILD_SIZE VARCHAR(32),
	COMPLETE_DATE VARCHAR(6),
	DEVELOPER_CODE VARCHAR(32),
	DEVELOPER_NAME VARCHAR(100),
	SECTION_CODE VARCHAR(32) NOT NULL,
	SECTION_NAME VARCHAR(50) NOT NULL,
	DISTRICT_CODE VARCHAR(32) NOT NULL,
	DISTRICT_NAME VARCHAR(100) NOT NULL,
	BUILD_NAME VARCHAR(100) NOT NULL,
	LAND_INFO VARCHAR(32),
	HOUSE_OWNER VARCHAR(32),
	REG_INFO VARCHAR(32),
	BUILD_DEVELOPER_NUMBER VARCHAR(20),
	HOUSE_STATUS VARCHAR(32),
	CONSTRAINT PK_HOUSE PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.HOUSE_CLOSE_CANCEL
(
	ID VARCHAR(32) NOT NULL,
	CANCEL_DATE DATETIME NOT NULL,
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.HOUSE_RECORD
(
	HOUSE_CODE VARCHAR(32) NOT NULL,
	HOUSE VARCHAR(32) NOT NULL,
	PRIMARY KEY (HOUSE_CODE),
	UNIQUE (HOUSE),
	CONSTRAINT HOUSE_CODE_UNIQUE UNIQUE (HOUSE_CODE, HOUSE)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.HOUSE_REG_INFO
(
	ID VARCHAR(32) NOT NULL,
	HOUSE_PORPERTY VARCHAR(32) NOT NULL,
	HOUSE_FROM VARCHAR(32) NOT NULL,
	POOL_MEMO VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.HOUSE_STATE
(
	ID VARCHAR(32) NOT NULL,
	HOUSE VARCHAR(32) NOT NULL,
	HOUSE_STATUS VARCHAR(32) NOT NULL,
	CONSTRAINT PK_HOUSESTATE PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.LAND_INFO
(
	ID VARCHAR(32) NOT NULL,
	LAND_CARD_NO VARCHAR(50),
	NUMBER VARCHAR(50) NOT NULL,
	LAND_PROPERTY VARCHAR(32),
	BEGIN_USE_TIME TIMESTAMP NOT NULL,
	END_USE_TIME TIMESTAMP NOT NULL,
	LAND_GET_MODE VARCHAR(32) NOT NULL,
	LAND_AREA DECIMAL(18,3),
	CONSTRAINT PK_LANDINFO PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.LOCKED_HOUSE
(
	HOUSE_CODE VARCHAR(32) NOT NULL,
	-- 字典
	TYPE VARCHAR(32) NOT NULL COMMENT '字典',
	DESCRIPTION VARCHAR(500),
	EMP_CODE VARCHAR(32) NOT NULL,
	EMP_NAME VARCHAR(50) NOT NULL,
	LOCKED_TIME TIMESTAMP NOT NULL,
	BUILD_CODE VARCHAR(32) NOT NULL,
	PRIMARY KEY (HOUSE_CODE)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.MAKE_CARD
(
	ID VARCHAR(32) NOT NULL,
	NUMBER VARCHAR(100) NOT NULL,
	TYPE VARCHAR(20) NOT NULL,
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	DISABLE BOOLEAN NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.MAPPING_CORP
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	CODE VARCHAR(100) NOT NULL,
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.MORTGAEGE_REGISTE
(
	HIGHEST_MOUNT_MONEY DECIMAL(19,4) NOT NULL,
	WARRANT_SCOPE VARCHAR(100) NOT NULL,
	INTEREST_TYPE VARCHAR(32) NOT NULL,
	MORTGAGE_DUE_TIME_S DATETIME NOT NULL,
	MORTGAGE_TIME VARCHAR(50) NOT NULL,
	MORTGAGE_AREA DECIMAL(19,4) NOT NULL,
	ID VARCHAR(32) NOT NULL,
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.NEW_HOUSE_CONTRACT
(
	ID VARCHAR(32) NOT NULL,
	SIGN_DATE DATETIME NOT NULL,
	RECORD_DATE DATETIME NOT NULL,
	BUSINESS_ID VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.NUMBER_POOL
(
	ID VARCHAR(32) NOT NULL,
	NUMBER BIGINT UNSIGNED NOT NULL,
	VERSION INT,
	TYPE VARCHAR(20) NOT NULL,
	USE_TIME TIMESTAMP NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.OTHER_POWER_CARD
(
	FINANCIAL_NAME VARCHAR(120) NOT NULL,
	FINANCIAL_CODE VARCHAR(100),
	FINANCIAL_PHONE VARCHAR(15),
	-- 个人
	-- 机构
	FINANCIAL_TYPE VARCHAR(20) NOT NULL COMMENT '个人
机构',
	ID_TYPE VARCHAR(32),
	ID VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.OTHER_POWER_CARD_AND_HOUSE
(
	HOUSE VARCHAR(32) NOT NULL,
	CARD VARCHAR(32) NOT NULL,
	PRIMARY KEY (HOUSE, CARD)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.OWNER_BUSINESS
(
	-- 倒库导入原库的NO
	ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	VERSION INT,
	SOURCE VARCHAR(20) NOT NULL,
	MEMO VARCHAR(200),
	STATUS VARCHAR(20) NOT NULL,
	DEFINE_NAME VARCHAR(50),
	DEFINE_ID VARCHAR(32),
	-- 倒库导入原库的NO
	SELECT_BUSINESS VARCHAR(32) COMMENT '倒库导入原库的NO',
	CREATE_TIME TIMESTAMP NOT NULL,
	APPLY_TIME DATETIME,
	CHECK_TIME TIMESTAMP,
	REG_TIME DATETIME,
	RECORD_TIME TIMESTAMP,
	RECORDED BOOLEAN NOT NULL,
	-- 正常业务
	-- 撤消业务
	-- 更正业务
	TYPE VARCHAR(20) NOT NULL COMMENT '正常业务
撤消业务
更正业务',
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.PROCESS_MESSAGES
(
	ID VARCHAR(32) NOT NULL,
	LEVEL VARCHAR(20) NOT NULL,
	MESSAGES VARCHAR(200) NOT NULL,
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.PROJECT
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	ADDRESS VARCHAR(200),
	BUILD_SIZE VARCHAR(32),
	BUILD_COUNT INT,
	AREA DECIMAL(18,3),
	SUM_AREA DECIMAL(18,3),
	MAP_TIME TIMESTAMP,
	COMPLETE_DATE VARCHAR(6),
	DEVELOPER_NAME VARCHAR(100),
	DEVELOPER_CODE VARCHAR(32),
	SECTION_NAME VARCHAR(50) NOT NULL,
	SECTION_CODE VARCHAR(32) NOT NULL,
	DISTRICT_CODE VARCHAR(32) NOT NULL,
	DISTRICT_NAME VARCHAR(100) NOT NULL,
	PROJECT_CODE VARCHAR(32) NOT NULL,
	-- 倒库导入原库的NO
	BUSINESS VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	CONSTRAINT PK_PROJECT PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.PROJECT_RECORD
(
	ID VARCHAR(32) NOT NULL,
	SALE_CARD VARCHAR(32),
	PROJECT_CODE VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID),
	UNIQUE (PROJECT_CODE)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.PROJECT_RECORD_STORE
(
	ID VARCHAR(32) NOT NULL,
	FRAME VARCHAR(10) NOT NULL,
	CABINET VARCHAR(20) NOT NULL,
	BOX VARCHAR(50) NOT NULL,
	RECORD VARCHAR(32) NOT NULL,
	BUSINESS VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.PROJECT_SELL_CARD
(
	HOUSE_COUNT INT,
	BUILD_COUNT INT,
	AREA DECIMAL(18,3),
	PREPARE_SELL BIT(1),
	USE_TYPE VARCHAR(32),
	SELL_OBJECT VARCHAR(50),
	YEAR_NUMBER VARCHAR(20),
	ORDER_NUMBER VARCHAR(20),
	PRINT_TIME TIMESTAMP NOT NULL,
	MEMO VARCHAR(200),
	PROJECT VARCHAR(32) NOT NULL,
	ID VARCHAR(32) NOT NULL,
	TYPE VARCHAR(20) NOT NULL,
	LAND_CARD_NO VARCHAR(50),
	NUMBER VARCHAR(50) NOT NULL,
	LAND_PROPERTY VARCHAR(32),
	BEGIN_USE_TIME TIMESTAMP NOT NULL,
	END_USE_TIME TIMESTAMP NOT NULL,
	LAND_GET_MODE VARCHAR(32),
	LAND_AREA DECIMAL(18,3),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


-- 记录注销原因，更正前，更正后，变更前，变更后等事由信息
CREATE TABLE HOUSE_OWNER_RECORD.REASON
(
	ID VARCHAR(32) NOT NULL,
	TYPE VARCHAR(20) NOT NULL,
	REASON VARCHAR(200),
	-- 倒库导入原库的NO
	BUISINESS_ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '记录注销原因，更正前，更正后，变更前，变更后等事由信息' DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.RECORD_STORE
(
	ID VARCHAR(32) NOT NULL,
	FRAME VARCHAR(10) NOT NULL,
	CABINET VARCHAR(20) NOT NULL,
	BOX VARCHAR(50) NOT NULL,
	BUSINESS_HOUSE VARCHAR(32) NOT NULL,
	HOUSE_CODE VARCHAR(32) NOT NULL,
	RECORD_CODE VARCHAR(50) NOT NULL,
	PRIMARY KEY (ID),
	UNIQUE (HOUSE_CODE)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.SALE_INFO
(
	ID VARCHAR(32) NOT NULL,
	PAY_TYPE VARCHAR(32),
	SUM_PRICE DECIMAL(19,4) NOT NULL,
	-- 倒库导入原库的NO
	BUSINESS_ID VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.TASK_OPER
(
	ID BIGINT NOT NULL,
	-- 倒库导入原库的NO
	BUSINESS VARCHAR(32) NOT NULL COMMENT '倒库导入原库的NO',
	OPER_TIME TIMESTAMP NOT NULL,
	EMP_CODE VARCHAR(32) NOT NULL,
	EMP_NAME VARCHAR(50) NOT NULL,
	TASK_NAME VARCHAR(100) NOT NULL,
	COMMENTS VARCHAR(500),
	OPER_TYPE VARCHAR(20) NOT NULL,
	ACCEPT BOOLEAN NOT NULL,
	TASK_TYPE VARCHAR(20) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE HOUSE_OWNER_RECORD.UPLOAD_FILE
(
	FILE_NAME VARCHAR(255) NOT NULL,
	EMP_NAME VARCHAR(50) NOT NULL,
	EMP_CODE VARCHAR(32) NOT NULL,
	MD5 VARCHAR(500) NOT NULL,
	BUSINESS_FILE_ID VARCHAR(32) NOT NULL,
	PRIMARY KEY (FILE_NAME)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;



/* Create Foreign Keys */

ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE
	ADD FOREIGN KEY (BUILD_ID)
	REFERENCES HOUSE_OWNER_RECORD.BUILD (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.UPLOAD_FILE
	ADD FOREIGN KEY (BUSINESS_FILE_ID)
	REFERENCES HOUSE_OWNER_RECORD.BUSINESS_FILE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.RECORD_STORE
	ADD FOREIGN KEY (BUSINESS_HOUSE)
	REFERENCES HOUSE_OWNER_RECORD.BUSINESS_HOUSE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.NEW_HOUSE_CONTRACT
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.BUSINESS_HOUSE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.HOUSE
	ADD FOREIGN KEY (HOUSE_OWNER)
	REFERENCES HOUSE_OWNER_RECORD.BUSINESS_OWNER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE
	ADD FOREIGN KEY (HOUSE_OWNER)
	REFERENCES HOUSE_OWNER_RECORD.BUSINESS_OWNER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.OTHER_POWER_CARD_AND_HOUSE
	ADD FOREIGN KEY (CARD)
	REFERENCES HOUSE_OWNER_RECORD.CARD_INFO (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.OTHER_POWER_CARD
	ADD FOREIGN KEY (ID)
	REFERENCES HOUSE_OWNER_RECORD.CARD_INFO (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE
	ADD FOREIGN KEY (AFTER_HOUSE)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.HOUSE_RECORD
	ADD FOREIGN KEY (HOUSE)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE
	ADD FOREIGN KEY (START_HOUSE)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.HOUSE_STATE
	ADD FOREIGN KEY (HOUSE)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.OTHER_POWER_CARD_AND_HOUSE
	ADD FOREIGN KEY (HOUSE)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.RECORD_STORE
	ADD FOREIGN KEY (HOUSE_CODE)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE_RECORD (HOUSE_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.HOUSE
	ADD FOREIGN KEY (REG_INFO)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE_REG_INFO (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE
	ADD FOREIGN KEY (REG_INFO)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE_REG_INFO (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_POOL
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.HOUSE_REG_INFO (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.HOUSE
	ADD FOREIGN KEY (LAND_INFO)
	REFERENCES HOUSE_OWNER_RECORD.LAND_INFO (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE
	ADD FOREIGN KEY (LAND_INFO)
	REFERENCES HOUSE_OWNER_RECORD.LAND_INFO (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.CARD_INFO
	ADD FOREIGN KEY (ID)
	REFERENCES HOUSE_OWNER_RECORD.MAKE_CARD (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_OWNER
	ADD FOREIGN KEY (CARD)
	REFERENCES HOUSE_OWNER_RECORD.MAKE_CARD (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_POOL
	ADD FOREIGN KEY (CARD)
	REFERENCES HOUSE_OWNER_RECORD.MAKE_CARD (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.CLOSE_HOUSE
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.MAPPING_CORP
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.REASON
	ADD FOREIGN KEY (BUISINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.MORTGAEGE_REGISTE
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_MONEY
	ADD FOREIGN KEY (BUSINESS)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.TASK_OPER
	ADD FOREIGN KEY (BUSINESS)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_HOUSE
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.EVALUATE
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.PROJECT
	ADD FOREIGN KEY (BUSINESS)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.OWNER_BUSINESS
	ADD FOREIGN KEY (SELECT_BUSINESS)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.HOUSE_CLOSE_CANCEL
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.MAKE_CARD
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_PERSION
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.FINANCIAL
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_EMP
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUSINESS_FILE
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.SALE_INFO
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.CARD
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.PROCESS_MESSAGES
	ADD FOREIGN KEY (BUSINESS_ID)
	REFERENCES HOUSE_OWNER_RECORD.OWNER_BUSINESS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.PROJECT_SELL_CARD
	ADD FOREIGN KEY (PROJECT)
	REFERENCES HOUSE_OWNER_RECORD.PROJECT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.PROJECT_RECORD_STORE
	ADD FOREIGN KEY (BUSINESS)
	REFERENCES HOUSE_OWNER_RECORD.PROJECT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.BUILD
	ADD FOREIGN KEY (PROJECT)
	REFERENCES HOUSE_OWNER_RECORD.PROJECT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.PROJECT_RECORD_STORE
	ADD FOREIGN KEY (RECORD)
	REFERENCES HOUSE_OWNER_RECORD.PROJECT_RECORD (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE HOUSE_OWNER_RECORD.PROJECT_RECORD
	ADD FOREIGN KEY (SALE_CARD)
	REFERENCES HOUSE_OWNER_RECORD.PROJECT_SELL_CARD (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



